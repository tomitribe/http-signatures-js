{"version":3,"file":"http-signatures-js.umd.js","sources":["../src/RuntimeException.ts","../src/AuthenticationException.ts","../src/UnsupportedAlgorithmException.ts","../src/Algorithm.ts","../src/System.ts","../src/Base64.ts","../src/Collection.ts","../node_modules/jwk-js/src/int10.ts","../node_modules/jwk-js/src/util.ts","../node_modules/jwk-js/src/asn1.ts","../node_modules/jwk-js/src/PEM.ts","../node_modules/jwk-js/src/EC.ts","../node_modules/jwk-js/src/HMAC.ts","../node_modules/jwk-js/src/RSA.ts","../node_modules/jwk-js/src/index.ts","../src/EC.ts","../node_modules/ts-tomitribe-util/src/lib/CommonUtils.ts","../node_modules/ts-tomitribe-util/src/lib/StringBuilder.ts","../node_modules/ts-tomitribe-util/src/lib/TimeUnit.ts","../node_modules/ts-tomitribe-util/src/lib/TimeUtils.ts","../node_modules/ts-tomitribe-util/src/lib/LongDuration.ts","../node_modules/ts-tomitribe-util/src/tomitribe-util.ts","../node_modules/ts-tomitribe-util/index.ts","../src/Join.ts","../src/MissingAlgorithmException.ts","../src/MissingKeyIdException.ts","../src/MissingRequiredHeaderException.ts","../src/MissingSignatureException.ts","../src/RSA.ts","../src/PEM.ts","../src/UnparsableSignatureException.ts","../src/Signature.ts","../src/Signatures.ts","../src/index.ts"],"sourcesContent":["/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport class RuntimeException extends Error {\r\n    private cause: any;\r\n    public constructor(message?: string, cause?: any) {\r\n        super(message);\r\n        this.cause = cause;\r\n    }\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { RuntimeException } from \"./RuntimeException\";\r\n\r\nexport class AuthenticationException extends RuntimeException {\r\n    public constructor(message?: string, cause?: any) {\r\n        super(message, cause);\r\n    }\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { AuthenticationException } from \"./AuthenticationException\";\r\n\r\nexport class UnsupportedAlgorithmException extends AuthenticationException {\r\n    public constructor(message: string, cause?: any) {\r\n        super(message, cause);\r\n    }\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { UnsupportedAlgorithmException } from \"./UnsupportedAlgorithmException\";\r\n\r\nexport interface StringAlgorithmMap {\r\n    [key: string]: Algorithm;\r\n}\r\n\r\nexport class Algorithm {\r\n    public static values: Algorithm[] = [];\r\n    public static aliases: StringAlgorithmMap = {};\r\n\r\n    public static HMAC_SHA1: Algorithm = new Algorithm(\"HmacSHA1\", \"hmac-sha1\", \"Mac.class\");\r\n    public static HMAC_SHA224: Algorithm = new Algorithm(\"HmacSHA224\", \"hmac-sha224\", \"Mac.class\");\r\n    public static HMAC_SHA256: Algorithm = new Algorithm(\"HmacSHA256\", \"hmac-sha256\", \"Mac.class\");\r\n    public static HMAC_SHA384: Algorithm = new Algorithm(\"HmacSHA384\", \"hmac-sha384\", \"Mac.class\");\r\n    public static HMAC_SHA512: Algorithm = new Algorithm(\"HmacSHA512\", \"hmac-sha512\", \"Mac.class\");\r\n\r\n    // rsa\r\n    public static RSA_SHA1: Algorithm = new Algorithm(\"SHA1withRSA\", \"rsa-sha1\", \"java.security.Signature.class\");\r\n    public static RSA_SHA256: Algorithm = new Algorithm(\"SHA256withRSA\", \"rsa-sha256\", \"java.security.Signature.class\");\r\n    public static RSA_SHA384: Algorithm = new Algorithm(\"SHA384withRSA\", \"rsa-sha384\", \"java.security.Signature.class\");\r\n    public static RSA_SHA512: Algorithm = new Algorithm(\"SHA512withRSA\", \"rsa-sha512\", \"java.security.Signature.class\");\r\n\r\n    // dsa\r\n    public static DSA_SHA1: Algorithm = new Algorithm(\"SHA1withDSA\", \"dsa-sha1\", \"java.security.Signature.class\");\r\n    public static DSA_SHA224: Algorithm = new Algorithm(\"SHA224withDSA\", \"dsa-sha224\", \"java.security.Signature.class\");\r\n    public static DSA_SHA256: Algorithm = new Algorithm(\"SHA256withDSA\", \"dsa-sha256\", \"java.security.Signature.class\");\r\n\r\n    // ecc\r\n    public static ECDSA_SHA1: Algorithm = new Algorithm(\"SHA1withECDSA\", \"ecdsa-sha1\", \"java.security.Signature.class\");\r\n    public static ECDSA_SHA256: Algorithm = new Algorithm(\"SHA256withECDSA\", \"ecdsa-sha256\", \"java.security.Signature.class\");\r\n    public static ECDSA_SHA384: Algorithm = new Algorithm(\"SHA384withECDSA\", \"ecdsa-sha384\", \"java.security.Signature.class\");\r\n    public static ECDSA_SHA512: Algorithm = new Algorithm(\"SHA512withECDSA\", \"ecdsa-sha512\", \"java.security.Signature.class\");\r\n\r\n    private portableName: string;\r\n\r\n    private jmvName: string;\r\n\r\n    public type: any;\r\n\r\n    public getPortableName(): string {\r\n        return this.portableName;\r\n    }\r\n\r\n    public getJmvName(): string {\r\n        return this.jmvName;\r\n    }\r\n\r\n    public getType(): any {\r\n        return this.type;\r\n    }\r\n\r\n    public static getValues(): Algorithm[] {\r\n        return Algorithm.values || [];\r\n    }\r\n\r\n    public static getAliases(): StringAlgorithmMap {\r\n        return Algorithm.aliases || {};\r\n    }\r\n    public static toPortableName(name: string): string {\r\n        return Algorithm.get(name).getPortableName();\r\n    }\r\n\r\n    public static toJvmName(name: string): string {\r\n        return Algorithm.get(name).getJmvName();\r\n    }\r\n\r\n    public static get(name: string): Algorithm {\r\n        let algorithm: Algorithm = Algorithm.getAliases()[Algorithm.normalize(name)];\r\n        if (algorithm != null) return algorithm;\r\n        throw new UnsupportedAlgorithmException(name);\r\n    }\r\n\r\n    private static normalize(algorithm: string): string {\r\n        //replaceAll\r\n        return algorithm.replace(new RegExp(\"[^A-Za-z0-9]+\", 'g'), \"\").toLowerCase();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     */\r\n    public toString(): string {\r\n        return this.getPortableName();\r\n    }\r\n\r\n    constructor(portableName: string, jmvName: string, type: any) {\r\n        this.portableName = portableName;\r\n        this.jmvName = jmvName;\r\n        this.type = type;\r\n\r\n        Algorithm.values.push(this);\r\n        Algorithm.aliases[Algorithm.normalize(portableName)] = this;\r\n        Algorithm.aliases[Algorithm.normalize(jmvName)] = this;\r\n    }\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport class System {\r\n    static arraycopy(srcArr: any[], srcOff: number, destArr: any[], dstOff: number, size: number) {\r\n        if (srcArr !== destArr || dstOff >= srcOff + size) {\r\n            while (--size >= 0) destArr[dstOff++] = srcArr[srcOff++];\r\n        } else {\r\n            let tmp: any[] = srcArr.slice(srcOff, srcOff + size);\r\n            for (let i = 0; i < size; i++) destArr[dstOff++] = tmp[i];\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { System } from \"./System\";\r\n\r\nexport class Base64 {\r\n    /**\r\n     * Chunk size per RFC 2045 section 6.8.\r\n     *\r\n     * <p>The {@value} character limit does not count the trailing CRLF, but counts\r\n     * all other characters, including any equal signs.</p>\r\n     *\r\n     * @see <a href=\"http://www.ietf.org/rfc/rfc2045.txt\">RFC 2045 section 6.8</a>\r\n     */\r\n    static CHUNK_SIZE: number = 76;\r\n\r\n    /**\r\n     * Chunk separator per RFC 2045 section 2.1.\r\n     *\r\n     * @see <a href=\"http://www.ietf.org/rfc/rfc2045.txt\">RFC 2045 section 2.1</a>\r\n     */\r\n    static CHUNK_SEPARATOR: number[] = (\"\\r\\n\").split('').map(s => s.charCodeAt(0));\r\n\r\n    /**\r\n     * The base length.\r\n     */\r\n    static BASELENGTH: number = 255;\r\n\r\n    /**\r\n     * Lookup length.\r\n     */\r\n    static LOOKUPLENGTH: number = 64;\r\n\r\n    /**\r\n     * Used to calculate the number of bits in a byte.\r\n     */\r\n    static EIGHTBIT: number = 8;\r\n\r\n    /**\r\n     * Used when encoding something which has fewer than 24 bits.\r\n     */\r\n    static SIXTEENBIT: number = 16;\r\n\r\n    /**\r\n     * Used to determine how many bits data contains.\r\n     */\r\n    static TWENTYFOURBITGROUP: number = 24;\r\n\r\n    /**\r\n     * Used to get the number of Quadruples.\r\n     */\r\n    static FOURBYTE: number = 4;\r\n\r\n    /**\r\n     * Used to test the sign of a byte.\r\n     */\r\n    static SIGN: number = -128;\r\n\r\n    /**\r\n     * Byte used to pad output.\r\n     */\r\n    static PAD: number = ('=').charCodeAt(0);\r\n\r\n    /**\r\n     * Contains the Base64 values <code>0</code> through <code>63</code> accessed by using character encodings as\r\n     * indices.\r\n     * <p>\r\n     * For example, <code>base64Alphabet['+']</code> returns <code>62</code>.\r\n     * </p>\r\n     * <p>\r\n     * The value of undefined encodings is <code>-1</code>.\r\n     * </p>\r\n     */\r\n    static get base64Alphabet(): number[] {\r\n        const base64Alphabet: number[] = [];\r\n        for (let i: number = 0; i < Base64.BASELENGTH; i++)\r\n            base64Alphabet[i] = (-1 | 0) as number;\r\n\r\n        for (let i: number = ('Z').charCodeAt(0); i >= 'A'.charCodeAt(0); i--)\r\n            base64Alphabet[i] = ((i - 'A'.charCodeAt(0)) | 0) as number;\r\n\r\n        for (let i: number = ('z').charCodeAt(0); i >= 'a'.charCodeAt(0); i--)\r\n            base64Alphabet[i] = ((i - 'a'.charCodeAt(0) + 26) | 0) as number;\r\n\r\n        for (let i: number = ('9').charCodeAt(0); i >= '0'.charCodeAt(0); i--)\r\n            base64Alphabet[i] = ((i - '0'.charCodeAt(0) + 52) | 0) as number;\r\n\r\n        base64Alphabet[('+').charCodeAt(0)] = 62;\r\n        base64Alphabet[('/').charCodeAt(0)] = 63;\r\n        return base64Alphabet;\r\n    }\r\n\r\n    /**\r\n     * <p>\r\n     * Contains the Base64 encodings <code>A</code> through <code>Z</code>, followed by <code>a</code> through\r\n     * <code>z</code>, followed by <code>0</code> through <code>9</code>, followed by <code>+</code>, and\r\n     * <code>/</code>.\r\n     * </p>\r\n     * <p>\r\n     * This array is accessed by using character values as indices.\r\n     * </p>\r\n     * <p>\r\n     * For example, <code>lookUpBase64Alphabet[62] </code> returns <code>'+'</code>.\r\n     * </p>\r\n     */\r\n    static get lookUpBase64Alphabet(): number[] {\r\n        const lookUpBase64Alphabet: number[] = [];\r\n        for (let i: number = 0; i <= 25; i++)\r\n            lookUpBase64Alphabet[i] = ('A'.charCodeAt(0) + i) | 0 as number;\r\n\r\n        for (let i: number = 26, j: number = 0; i <= 51; i++, j++)\r\n            lookUpBase64Alphabet[i] = ('a'.charCodeAt(0) + j) | 0 as number;\r\n\r\n        for (let i: number = 52, j: number = 0; i <= 61; i++, j++)\r\n            lookUpBase64Alphabet[i] = ('0'.charCodeAt(0) + j) | 0 as number;\r\n\r\n        lookUpBase64Alphabet[62] = ('+').charCodeAt(0);\r\n        lookUpBase64Alphabet[63] = ('/').charCodeAt(0);\r\n        return lookUpBase64Alphabet\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the <code>octect</code> is in the base 64 alphabet.\r\n     *\r\n     * @param {number} octect The value to test\r\n     * @return {boolean} <code>true</code> if the value is defined in the the base 64 alphabet, <code>false</code> otherwise.\r\n     * @private\r\n     */\r\n    private static isBase64(octect: number): boolean {\r\n        if (octect === Base64.PAD) {\r\n            return true;\r\n        } else if (octect < 0 || Base64.base64Alphabet[octect] === -1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Encodes binary data using the base64 algorithm, optionally\r\n     * chunking the output into 76 character blocks.\r\n     *\r\n     * @param {Array} binaryData Array containing binary data to encode.\r\n     * @param {boolean} isChunked if <code>true</code> this encoder will chunk\r\n     * the base64 output into 76 character blocks\r\n     * @return {Array} Base64-encoded data.\r\n     */\r\n    public static encodeBase64(binaryData: number[], isChunked: boolean = false): number[] {\r\n        let lengthDataBits: number = binaryData.length * Base64.EIGHTBIT;\r\n        let fewerThan24bits: number = lengthDataBits % Base64.TWENTYFOURBITGROUP;\r\n        let numberTriplets: number = (lengthDataBits / Base64.TWENTYFOURBITGROUP | 0);\r\n        let encodedData: number[];\r\n        let encodedDataLength: number = 0;\r\n        let nbrChunks: number = 0;\r\n        if (fewerThan24bits !== 0) {\r\n            encodedDataLength = (numberTriplets + 1) * 4;\r\n        } else {\r\n            encodedDataLength = numberTriplets * 4;\r\n        }\r\n        if (isChunked) {\r\n            nbrChunks = (Base64.CHUNK_SEPARATOR.length === 0 ? 0 : (<number>Math.ceil(<number>encodedDataLength / Base64.CHUNK_SIZE) | 0));\r\n            encodedDataLength += nbrChunks * Base64.CHUNK_SEPARATOR.length;\r\n        }\r\n        encodedData = [];\r\n        let k: number = 0;\r\n        let l: number = 0;\r\n        let b1: number = 0;\r\n        let b2: number = 0;\r\n        let b3: number = 0;\r\n        let encodedIndex: number = 0;\r\n        let dataIndex: number = 0;\r\n        let i: number;\r\n        let nextSeparatorIndex: number = Base64.CHUNK_SIZE;\r\n        let chunksSoFar: number = 0;\r\n        for (i = 0; i < numberTriplets; i++) {\r\n            {\r\n                dataIndex = i * 3;\r\n                b1 = binaryData[dataIndex];\r\n                b2 = binaryData[dataIndex + 1];\r\n                b3 = binaryData[dataIndex + 2];\r\n                l = (<number>(b2 & 15) | 0);\r\n                k = (<number>(b1 & 3) | 0);\r\n                let val1: number = ((b1 & Base64.SIGN) === 0) ? (<number>(b1 >> 2) | 0) : (<number>((b1) >> 2 ^ 192) | 0);\r\n                let val2: number = ((b2 & Base64.SIGN) === 0) ? (<number>(b2 >> 4) | 0) : (<number>((b2) >> 4 ^ 240) | 0);\r\n                let val3: number = ((b3 & Base64.SIGN) === 0) ? (<number>(b3 >> 6) | 0) : (<number>((b3) >> 6 ^ 252) | 0);\r\n                encodedData[encodedIndex] = Base64.lookUpBase64Alphabet[val1];\r\n                encodedData[encodedIndex + 1] = Base64.lookUpBase64Alphabet[val2 | (k << 4)];\r\n                encodedData[encodedIndex + 2] = Base64.lookUpBase64Alphabet[(l << 2) | val3];\r\n                encodedData[encodedIndex + 3] = Base64.lookUpBase64Alphabet[b3 & 63];\r\n                encodedIndex += 4;\r\n                if (isChunked) {\r\n                    if (encodedIndex === nextSeparatorIndex) {\r\n                        System.arraycopy(Base64.CHUNK_SEPARATOR, 0, encodedData, encodedIndex, Base64.CHUNK_SEPARATOR.length);\r\n                        chunksSoFar++;\r\n                        nextSeparatorIndex = (Base64.CHUNK_SIZE * (chunksSoFar + 1)) + (chunksSoFar * Base64.CHUNK_SEPARATOR.length);\r\n                        encodedIndex += Base64.CHUNK_SEPARATOR.length;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        dataIndex = i * 3;\r\n        if (fewerThan24bits === Base64.EIGHTBIT) {\r\n            b1 = binaryData[dataIndex];\r\n            k = (<number>(b1 & 3) | 0);\r\n            let val1: number = ((b1 & Base64.SIGN) === 0) ? (<number>(b1 >> 2) | 0) : (<number>((b1) >> 2 ^ 192) | 0);\r\n            encodedData[encodedIndex] = Base64.lookUpBase64Alphabet[val1];\r\n            encodedData[encodedIndex + 1] = Base64.lookUpBase64Alphabet[k << 4];\r\n            encodedData[encodedIndex + 2] = Base64.PAD;\r\n            encodedData[encodedIndex + 3] = Base64.PAD;\r\n        } else if (fewerThan24bits === Base64.SIXTEENBIT) {\r\n            b1 = binaryData[dataIndex];\r\n            b2 = binaryData[dataIndex + 1];\r\n            l = (<number>(b2 & 15) | 0);\r\n            k = (<number>(b1 & 3) | 0);\r\n            let val1: number = ((b1 & Base64.SIGN) === 0) ? (<number>(b1 >> 2) | 0) : (<number>((b1) >> 2 ^ 192) | 0);\r\n            let val2: number = ((b2 & Base64.SIGN) === 0) ? (<number>(b2 >> 4) | 0) : (<number>((b2) >> 4 ^ 240) | 0);\r\n            encodedData[encodedIndex] = Base64.lookUpBase64Alphabet[val1];\r\n            encodedData[encodedIndex + 1] = Base64.lookUpBase64Alphabet[val2 | (k << 4)];\r\n            encodedData[encodedIndex + 2] = Base64.lookUpBase64Alphabet[l << 2];\r\n            encodedData[encodedIndex + 3] = Base64.PAD;\r\n        }\r\n        if (isChunked) {\r\n            if (chunksSoFar < nbrChunks) {\r\n                System.arraycopy(Base64.CHUNK_SEPARATOR, 0, encodedData, encodedDataLength - Base64.CHUNK_SEPARATOR.length, Base64.CHUNK_SEPARATOR.length);\r\n            }\r\n        }\r\n        return encodedData;\r\n    }\r\n\r\n    /**\r\n     * Decodes Base64 data into octects\r\n     *\r\n     * @param {Array} base64Data Byte array containing Base64 data\r\n     * @return {Array} Array containing decoded data.\r\n     */\r\n    public static decodeBase64(base64Data: number[]): number[] {\r\n        base64Data = Base64.discardNonBase64(base64Data);\r\n        if (base64Data.length === 0) {\r\n            return [];\r\n        }\r\n        let numberQuadruple: number = (base64Data.length / Base64.FOURBYTE | 0);\r\n        let decodedData: number[];\r\n        let b1: number = 0;\r\n        let b2: number = 0;\r\n        let b3: number = 0;\r\n        let b4: number = 0;\r\n        let marker0: number = 0;\r\n        let marker1: number = 0;\r\n        let encodedIndex: number = 0;\r\n        let dataIndex: number = 0;\r\n        {\r\n            let lastData: number = base64Data.length;\r\n            while ((base64Data[lastData - 1] === Base64.PAD)) {\r\n                {\r\n                    if (--lastData === 0) {\r\n                        return [];\r\n                    }\r\n                }\r\n            }\r\n            decodedData = [];\r\n        }\r\n        for (let i: number = 0; i < numberQuadruple; i++) {\r\n            {\r\n                dataIndex = i * 4;\r\n                marker0 = base64Data[dataIndex + 2];\r\n                marker1 = base64Data[dataIndex + 3];\r\n                b1 = Base64.base64Alphabet[base64Data[dataIndex]];\r\n                b2 = Base64.base64Alphabet[base64Data[dataIndex + 1]];\r\n                if (marker0 !== Base64.PAD && marker1 !== Base64.PAD) {\r\n                    b3 = Base64.base64Alphabet[marker0];\r\n                    b4 = Base64.base64Alphabet[marker1];\r\n                    decodedData[encodedIndex] = (<number>(b1 << 2 | b2 >> 4) | 0);\r\n                    decodedData[encodedIndex + 1] = (<number>(((b2 & 15) << 4) | ((b3 >> 2) & 15)) | 0);\r\n                    decodedData[encodedIndex + 2] = (<number>(b3 << 6 | b4) | 0);\r\n                } else if (marker0 === Base64.PAD) {\r\n                    decodedData[encodedIndex] = (<number>(b1 << 2 | b2 >> 4) | 0);\r\n                } else if (marker1 === Base64.PAD) {\r\n                    b3 = Base64.base64Alphabet[marker0];\r\n                    decodedData[encodedIndex] = (<number>(b1 << 2 | b2 >> 4) | 0);\r\n                    decodedData[encodedIndex + 1] = (<number>(((b2 & 15) << 4) | ((b3 >> 2) & 15)) | 0);\r\n                }\r\n                encodedIndex += 3;\r\n            }\r\n        }\r\n        return decodedData;\r\n    }\r\n\r\n    /**\r\n     * Discards any characters outside of the base64 alphabet, per\r\n     * the requirements on page 25 of RFC 2045 - \"Any characters\r\n     * outside of the base64 alphabet are to be ignored in base64\r\n     * encoded data.\"\r\n     *\r\n     * @param {Array} data The base-64 encoded data to groom\r\n     * @return {Array} The data, less non-base64 characters (see RFC 2045).\r\n     */\r\n    static discardNonBase64(data: number[]): number[] {\r\n        let groomedData: number[] = [];\r\n        let bytesCopied: number = 0;\r\n        for (let i: number = 0; i < data.length; i++) {\r\n            {\r\n                if (Base64.isBase64(data[i])) {\r\n                    groomedData[bytesCopied++] = data[i];\r\n                }\r\n            }\r\n        }\r\n        let packedData: number[] = [];\r\n        System.arraycopy(groomedData, 0, packedData, 0, bytesCopied);\r\n        return packedData;\r\n    }\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nexport class Collection extends Array<string>{\r\n}\r\n","var max = 10000000000000; // biggest 10^n integer that can still fit 2^53 when multiplied by 256\r\n\r\nexport class Int10 {\r\n    buf: any[];\r\n\r\n    constructor(value?) {\r\n        this.buf = [+value || 0];\r\n    }\r\n\r\n    mulAdd(m, c) {\r\n        // assert(m <= 256)\r\n        var b = this.buf,\r\n            l = b.length,\r\n            i, t;\r\n        for (i = 0; i < l; ++i) {\r\n            t = b[i] * m + c;\r\n            if (t < max)\r\n                c = 0;\r\n            else {\r\n                c = 0 | (t / max);\r\n                t -= c * max;\r\n            }\r\n            b[i] = t;\r\n        }\r\n        if (c > 0)\r\n            b[i] = c;\r\n    };\r\n\r\n    sub(c) {\r\n        // assert(m <= 256)\r\n        var b = this.buf,\r\n            l = b.length,\r\n            i, t;\r\n        for (i = 0; i < l; ++i) {\r\n            t = b[i] - c;\r\n            if (t < 0) {\r\n                t += max;\r\n                c = 1;\r\n            } else\r\n                c = 0;\r\n            b[i] = t;\r\n        }\r\n        while (b[b.length - 1] === 0)\r\n            b.pop();\r\n    };\r\n\r\n    toString(base?: number) {\r\n        if ((base || 10) != 10)\r\n            throw 'only base 10 is supported';\r\n        var b = this.buf,\r\n            s = b[b.length - 1].toString();\r\n        for (var i = b.length - 2; i >= 0; --i)\r\n            s += (max + b[i]).toString().substring(1);\r\n        return s;\r\n    };\r\n\r\n    valueOf() {\r\n        var b = this.buf,\r\n            v = 0;\r\n        for (var i = b.length - 1; i >= 0; --i)\r\n            v = v * max + b[i];\r\n        return v;\r\n    };\r\n\r\n    simplify() {\r\n        var b = this.buf;\r\n        return (b.length == 1) ? b[0] : this;\r\n    };\r\n}\r\n","export const UNSUPPORTED_ALGORITHM = 'Unsupported algorithm name specified! Supported algorithms: \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\" and \"none\".';\r\nexport const ILLEGAL_ARGUMENT = 'Illegal argument specified!';\r\n\r\nexport function num2hex(memo: string, i: number): string {\r\n    return memo + ('0' + i.toString(16)).slice(-2);\r\n}\r\n\r\n// clean leading zeros\r\nexport function cleanZeros(b) {\r\n    return b[0] === 0 ? cleanZeros(b.slice(1)) : b;\r\n}\r\n\r\nexport function hex2AB(hex: string): ArrayBuffer | Uint8Array {\r\n    if (!hex) throw new Error(ILLEGAL_ARGUMENT);\r\n    const match = hex.match(/[0-9A-F]{2}/ig);\r\n    if (!match) throw new Error(ILLEGAL_ARGUMENT);\r\n    return new Uint8Array(match.map(i => parseInt(i, 16)))\r\n}\r\n\r\nexport function AB2hex(buff: ArrayBuffer | Uint8Array): string {\r\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\r\n    return buff.reduce(num2hex, '');\r\n}\r\n\r\n/**\r\n * Try running function and replace it's response as Promise.resolve/reject\r\n *\r\n * @param {function} fn - fn to call in for response\r\n *\r\n * @returns {Promise<any>} resulting Promise\r\n */\r\nexport function tryPromise(fn) {\r\n    try {\r\n        return Promise.resolve(fn());\r\n    } catch (e) {\r\n        return Promise.reject(e);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts string to ArrayBuffer\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {ArrayBuffer | Uint8Array} charCode ArrayBuffer\r\n */\r\nexport function s2AB(str: string): ArrayBuffer | Uint8Array {\r\n    const buff = new Uint8Array(str.length);\r\n    for (let i = 0; i < str.length; i++) buff[i] = str.charCodeAt(i);\r\n    return buff;\r\n}\r\n\r\n/**\r\n * Converts ArrayBuffer to string\r\n *\r\n * @param {ArrayBuffer | Uint8Array} buff - charCode ArrayBuffer to convert\r\n *\r\n * @returns {string} data string\r\n */\r\nexport function AB2s(buff: ArrayBuffer | Uint8Array): string {\r\n    if (buff instanceof ArrayBuffer) buff = new Uint8Array(buff);\r\n    return String.fromCharCode.apply(String, buff);\r\n}\r\n\r\n/**\r\n * Converts string to base64 string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} decoded data string\r\n */\r\nexport function b2s(str: string): string {\r\n    try {\r\n        if (typeof window === 'object' && typeof window.atob === 'function') {\r\n            return window.atob(str);\r\n        } else if (typeof Buffer !== 'undefined') {\r\n            return Buffer.from(str, 'base64').toString('binary')\r\n        } else throw new Error(ILLEGAL_ARGUMENT);\r\n    } catch (e) {\r\n        throw new Error(e);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts base64 string to base64url string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} base64url string\r\n */\r\nexport function b2bu(str: string): string {\r\n    if ((typeof str !== 'string') || (str.length % 4 !== 0)) {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n\r\n    return str\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_')\r\n        .replace(/=/g, '');\r\n}\r\n\r\n/**\r\n *\r\n * Converts base64url string to base64 string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} base64 string\r\n */\r\nexport function bu2b(str: string): string {\r\n    if ((typeof str !== 'string') || (str.length % 4 === 1)) {\r\n        throw new Error(ILLEGAL_ARGUMENT);\r\n    }\r\n\r\n    for (; (str.length % 4 !== 0);) {\r\n        str += '=';\r\n    }\r\n    return str\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n}\r\n\r\n/**\r\n * Converts base64url string to string\r\n *\r\n * @param {string} str - base64url string to convert\r\n *\r\n * @returns {string} decoded data string\r\n */\r\nexport function bu2s(str: string): string {\r\n    return b2s(bu2b(str));\r\n}\r\n\r\n/**\r\n * Converts base64 string to string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} base64 string\r\n */\r\nexport function s2b(str: string): string {\r\n    try {\r\n        if (typeof window === 'object' && typeof window.atob === 'function') {\r\n            return window.btoa(str);\r\n        } else if (typeof Buffer !== 'undefined') {\r\n            return Buffer.from(str).toString('base64');\r\n        } else throw new Error(ILLEGAL_ARGUMENT);\r\n    } catch (e) {\r\n        throw new Error(e);\r\n    }\r\n}\r\n\r\n/**\r\n * Converts string to base64url string\r\n *\r\n * @param {string} str - data string to convert\r\n *\r\n * @returns {string} base64url string\r\n */\r\nexport function s2bu(str: string): string {\r\n    return b2bu(s2b(str));\r\n}\r\n","import { Int10 } from './int10';\r\nimport { cleanZeros, hex2AB } from \"./util\";\r\n\r\nconst ellipsis = \"\\u2026\",\r\n    reTimeS = /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/,\r\n    reTimeL = /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\r\n\r\nfunction stringCut(str, len) {\r\n    if (str.length > len)\r\n        str = str.substring(0, len) + ellipsis;\r\n    return str;\r\n}\r\n\r\nexport class Stream {\r\n    enc: any;\r\n    pos: any;\r\n    hexDigits = \"0123456789ABCDEF\";\r\n\r\n    constructor(enc, pos = 0) {\r\n        if (enc instanceof Stream) {\r\n            this.enc = enc.enc;\r\n            this.pos = enc.pos;\r\n        } else {\r\n            this.enc = enc;\r\n            this.pos = pos;\r\n        }\r\n    }\r\n\r\n    get(pos) {\r\n        if (pos === undefined)\r\n            pos = this.pos++;\r\n        if (pos >= this.enc.length)\r\n            throw 'Requesting byte offset ' + pos + ' on a stream of length ' + this.enc.length;\r\n        return (typeof this.enc == \"string\") ? this.enc.charCodeAt(pos) : this.enc[pos];\r\n    };\r\n\r\n    hexByte(b) {\r\n        return this.hexDigits.charAt((b >> 4) & 0xF) + this.hexDigits.charAt(b & 0xF);\r\n    };\r\n\r\n    hexDump(start, end, raw) {\r\n        var s = \"\";\r\n        for (var i = start; i < end; ++i) {\r\n            s += this.hexByte(this.get(i));\r\n            if (raw !== true)\r\n                switch (i & 0xF) {\r\n                    case 0x7:\r\n                        s += \"  \";\r\n                        break;\r\n                    case 0xF:\r\n                        s += \"\\n\";\r\n                        break;\r\n                    default:\r\n                        s += \" \";\r\n                }\r\n        }\r\n        return s;\r\n    };\r\n\r\n    isASCII(start, end) {\r\n        for (var i = start; i < end; ++i) {\r\n            var c = this.get(i);\r\n            if (c < 32 || c > 176)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    parseStringISO(start, end) {\r\n        var s = \"\";\r\n        for (var i = start; i < end; ++i)\r\n            s += String.fromCharCode(this.get(i));\r\n        return s;\r\n    };\r\n\r\n    parseStringUTF(start, end) {\r\n        var s = \"\";\r\n        for (var i = start; i < end;) {\r\n            var c = this.get(i++);\r\n            if (c < 128)\r\n                s += String.fromCharCode(c);\r\n            else if ((c > 191) && (c < 224))\r\n                s += String.fromCharCode(((c & 0x1F) << 6) | (this.get(i++) & 0x3F));\r\n            else\r\n                s += String.fromCharCode(((c & 0x0F) << 12) | ((this.get(i++) & 0x3F) << 6) | (this.get(i++) & 0x3F));\r\n        }\r\n        return s;\r\n    };\r\n\r\n    parseStringBMP(start, end) {\r\n        var str = \"\", hi, lo;\r\n        for (var i = start; i < end;) {\r\n            hi = this.get(i++);\r\n            lo = this.get(i++);\r\n            str += String.fromCharCode((hi << 8) | lo);\r\n        }\r\n        return str;\r\n    };\r\n\r\n    parseTime(start, end, shortYear) {\r\n        var s = this.parseStringISO(start, end),\r\n            m = (shortYear ? reTimeS : reTimeL).exec(s);\r\n        if (!m)\r\n            return \"Unrecognized time: \" + s;\r\n        if (shortYear) {\r\n            var t = +m[1], y = (t < 70) ? 2000 : 1900;\r\n            m[1] = y + \"\";\r\n        }\r\n        s = m[1] + \"-\" + m[2] + \"-\" + m[3] + \" \" + m[4];\r\n        if (m[5]) {\r\n            s += \":\" + m[5];\r\n            if (m[6]) {\r\n                s += \":\" + m[6];\r\n                if (m[7])\r\n                    s += \".\" + m[7];\r\n            }\r\n        }\r\n        if (m[8]) {\r\n            s += \" UTC\";\r\n            if (m[8] != 'Z') {\r\n                s += m[8];\r\n                if (m[9])\r\n                    s += \":\" + m[9];\r\n            }\r\n        }\r\n        return s;\r\n    };\r\n\r\n    parseInteger(start, end) {\r\n        var v = this.get(start),\r\n            neg = (v > 127),\r\n            pad = neg ? 255 : 0,\r\n            len,\r\n            s = '';\r\n        while (v == pad && ++start < end)\r\n            v = this.get(start);\r\n        len = end - start;\r\n        if (len === 0)\r\n            return neg ? -1 : 0;\r\n        if (len > 4) {\r\n            let t = +v;\r\n            len <<= 3;\r\n            while (((t ^ pad) & 0x80) === 0) {\r\n                t <<= 1;\r\n                --len;\r\n            }\r\n            s = \"(\" + len + \" bit)\\n\";\r\n        }\r\n        if (neg) v = v - 256;\r\n        const n = new Int10(v);\r\n        for (let i = start + 1; i < end; ++i)\r\n            n.mulAdd(256, this.get(i));\r\n        return s + n.toString();\r\n    };\r\n\r\n    parseBitString(start, end, maxLength) {\r\n        var unusedBit = this.get(start),\r\n            lenBit = ((end - start - 1) << 3) - unusedBit,\r\n            intro = \"(\" + lenBit + \" bit)\\n\",\r\n            s = \"\";\r\n        for (var i = start + 1; i < end; ++i) {\r\n            var b = this.get(i),\r\n                skip = (i == end - 1) ? unusedBit : 0;\r\n            for (var j = 7; j >= skip; --j)\r\n                s += (b >> j) & 1 ? \"1\" : \"0\";\r\n            if (s.length > maxLength)\r\n                return intro + stringCut(s, maxLength);\r\n        }\r\n        return intro + s;\r\n    };\r\n\r\n    parseOctetString(start, end, maxLength) {\r\n        if (this.isASCII(start, end))\r\n            return stringCut(this.parseStringISO(start, end), maxLength);\r\n        var len = end - start,\r\n            s = \"(\" + len + \" byte)\\n\";\r\n        maxLength /= 2;\r\n        if (len > maxLength)\r\n            end = start + maxLength;\r\n        for (var i = start; i < end; ++i)\r\n            s += this.hexByte(this.get(i));\r\n        if (len > maxLength)\r\n            s += ellipsis;\r\n        return s;\r\n    };\r\n\r\n    parseOID(start, end, maxLength) {\r\n        var s = '',\r\n            n = new Int10(),\r\n            bits = 0;\r\n        for (var i = start; i < end; ++i) {\r\n            var v = this.get(i);\r\n            n.mulAdd(128, v & 0x7F);\r\n            bits += 7;\r\n            if (!(v & 0x80)) {\r\n                if (s === '') {\r\n                    n = n.simplify();\r\n                    if (n instanceof Int10) {\r\n                        n.sub(80);\r\n                        s = \"2.\" + n.toString();\r\n                    } else {\r\n                        var m = n < 80 ? n < 40 ? 0 : 1 : 2;\r\n                        s = m + \".\" + (n - m * 40);\r\n                    }\r\n                } else\r\n                    s += \".\" + n.toString();\r\n                if (s.length > maxLength)\r\n                    return stringCut(s, maxLength);\r\n                n = new Int10();\r\n                bits = 0;\r\n            }\r\n        }\r\n        if (bits > 0)\r\n            s += \".incomplete\";\r\n        return s;\r\n    };\r\n}\r\n\r\nexport class ASN1 {\r\n    stream: any;\r\n    header: any;\r\n    length: any;\r\n    tag: any;\r\n    sub: any;\r\n\r\n    constructor(stream, header, length, tag, sub) {\r\n        if (!(tag instanceof ASN1Tag)) throw 'Invalid tag value.';\r\n        this.stream = stream;\r\n        this.header = header;\r\n        this.length = length;\r\n        this.tag = tag;\r\n        this.sub = sub;\r\n    }\r\n\r\n    static decodeLength(stream) {\r\n        let buf = stream.get();\r\n        const len = buf & 0x7F;\r\n        if (len == buf)\r\n            return len;\r\n        if (len > 6)\r\n            throw \"Length over 48 bits not supported at position \" + (stream.pos - 1);\r\n        if (len === 0)\r\n            return null;\r\n        buf = 0;\r\n        for (var i = 0; i < len; ++i)\r\n            buf = (buf * 256) + stream.get();\r\n        return buf;\r\n    };\r\n\r\n    static decode(stream) {\r\n        if (!(stream instanceof Stream))\r\n            stream = new Stream(stream, 0);\r\n        const streamStart = new Stream(stream);\r\n        const tag = new ASN1Tag(stream);\r\n        let len = ASN1.decodeLength(stream), sub: any = null;\r\n        const start = stream.pos;\r\n        const header = start - streamStart.pos;\r\n        const getSub = function () {\r\n            sub = [];\r\n            if (len !== null) {\r\n                var end = start + len;\r\n                while (stream.pos < end)\r\n                    sub[sub.length] = ASN1.decode(stream);\r\n                if (stream.pos != end)\r\n                    throw \"Content size is not correct for container starting at offset \" + start;\r\n            } else {\r\n                try {\r\n                    for (; ;) {\r\n                        const s = ASN1.decode(stream);\r\n                        if (s.tag.isEOC())\r\n                            break;\r\n                        sub[sub.length] = s;\r\n                    }\r\n                    len = start - stream.pos;\r\n                } catch (e) {\r\n                    throw \"Exception while decoding undefined length content: \" + e;\r\n                }\r\n            }\r\n        };\r\n        if (tag.tagConstructed) {\r\n            getSub();\r\n        } else if (tag.isUniversal() && ((tag.tagNumber == 0x03) || (tag.tagNumber == 0x04))) {\r\n            try {\r\n                if (tag.tagNumber == 0x03)\r\n                    if (stream.get() != 0)\r\n                        throw \"BIT STRINGs with unused bits cannot encapsulate.\";\r\n                getSub();\r\n                for (var i = 0; i < sub.length; ++i)\r\n                    if (sub[i].tag.isEOC())\r\n                        throw 'EOC is not supposed to be actual content.';\r\n            } catch (e) {\r\n\r\n                sub = null;\r\n            }\r\n        }\r\n        if (sub === null) {\r\n            if (len === null)\r\n                throw \"We can't skip over an invalid tag with undefined length at offset \" + start;\r\n            stream.pos = start + Math.abs(len);\r\n        }\r\n        return new ASN1(streamStart, header, len, tag, sub);\r\n    };\r\n\r\n    typeName() {\r\n        switch (this.tag.tagClass) {\r\n            case 0:\r\n                switch (this.tag.tagNumber) {\r\n                    case 0x00:\r\n                        return \"EOC\";\r\n                    case 0x01:\r\n                        return \"BOOLEAN\";\r\n                    case 0x02:\r\n                        return \"INTEGER\";\r\n                    case 0x03:\r\n                        return \"BIT_STRING\";\r\n                    case 0x04:\r\n                        return \"OCTET_STRING\";\r\n                    case 0x05:\r\n                        return \"NULL\";\r\n                    case 0x06:\r\n                        return \"OBJECT_IDENTIFIER\";\r\n                    case 0x07:\r\n                        return \"ObjectDescriptor\";\r\n                    case 0x08:\r\n                        return \"EXTERNAL\";\r\n                    case 0x09:\r\n                        return \"REAL\";\r\n                    case 0x0A:\r\n                        return \"ENUMERATED\";\r\n                    case 0x0B:\r\n                        return \"EMBEDDED_PDV\";\r\n                    case 0x0C:\r\n                        return \"UTF8String\";\r\n                    case 0x10:\r\n                        return \"SEQUENCE\";\r\n                    case 0x11:\r\n                        return \"SET\";\r\n                    case 0x12:\r\n                        return \"NumericString\";\r\n                    case 0x13:\r\n                        return \"PrintableString\";\r\n                    case 0x14:\r\n                        return \"TeletexString\";\r\n                    case 0x15:\r\n                        return \"VideotexString\";\r\n                    case 0x16:\r\n                        return \"IA5String\";\r\n                    case 0x17:\r\n                        return \"UTCTime\";\r\n                    case 0x18:\r\n                        return \"GeneralizedTime\";\r\n                    case 0x19:\r\n                        return \"GraphicString\";\r\n                    case 0x1A:\r\n                        return \"VisibleString\";\r\n                    case 0x1B:\r\n                        return \"GeneralString\";\r\n                    case 0x1C:\r\n                        return \"UniversalString\";\r\n                    case 0x1E:\r\n                        return \"BMPString\";\r\n                }\r\n                return \"Universal_\" + this.tag.tagNumber.toString();\r\n            case 1:\r\n                return \"Application_\" + this.tag.tagNumber.toString();\r\n            case 2:\r\n                return \"[\" + this.tag.tagNumber.toString() + \"]\";\r\n            case 3:\r\n                return \"Private_\" + this.tag.tagNumber.toString();\r\n        }\r\n    };\r\n\r\n    content(maxLength?) {\r\n        if (this.tag === undefined)\r\n            return null;\r\n        if (maxLength === undefined)\r\n            maxLength = Infinity;\r\n        var content = this.posContent(),\r\n            len = Math.abs(this.length);\r\n        if (!this.tag.isUniversal()) {\r\n            if (this.sub !== null)\r\n                return \"(\" + this.sub.length + \" elem)\";\r\n            return this.stream.parseOctetString(content, content + len, maxLength);\r\n        }\r\n        switch (this.tag.tagNumber) {\r\n            case 0x01:\r\n                return (this.stream.get(content) === 0) ? \"false\" : \"true\";\r\n            case 0x02:\r\n                return this.stream.parseInteger(content, content + len);\r\n            case 0x03:\r\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\r\n                    this.stream.parseBitString(content, content + len, maxLength);\r\n            case 0x04:\r\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\r\n                    this.stream.parseOctetString(content, content + len, maxLength);\r\n\r\n            case 0x06:\r\n                return this.stream.parseOID(content, content + len, maxLength);\r\n\r\n            case 0x10:\r\n            case 0x11:\r\n                if (this.sub !== null)\r\n                    return \"(\" + this.sub.length + \" elem)\";\r\n                else\r\n                    return \"(no elem)\";\r\n            case 0x0C:\r\n                return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\r\n            case 0x12:\r\n            case 0x13:\r\n            case 0x14:\r\n            case 0x15:\r\n            case 0x16:\r\n\r\n            case 0x1A:\r\n\r\n                return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\r\n            case 0x1E:\r\n                return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\r\n            case 0x17:\r\n            case 0x18:\r\n                return this.stream.parseTime(content, content + len, (this.tag.tagNumber == 0x17));\r\n        }\r\n        return null;\r\n    };\r\n\r\n    toString() {\r\n        return this.typeName() + \"@\" + this.stream.pos + \"[header:\" + this.header + \",length:\" + this.length + \",sub:\" + ((this.sub === null) ? 'null' : this.sub.length) + \"]\";\r\n    };\r\n\r\n    posStart() {\r\n        return this.stream.pos;\r\n    };\r\n\r\n    posContent() {\r\n        return this.stream.pos + this.header;\r\n    };\r\n\r\n    posEnd() {\r\n        return this.stream.pos + this.header + Math.abs(this.length);\r\n    };\r\n\r\n    toHexString(root?) {\r\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\r\n    };\r\n\r\n    getHex() {\r\n        return this.stream.hexDump(this.posContent(), this.posEnd(), true);\r\n    };\r\n\r\n    getAB(clean = true) {\r\n        return clean ? cleanZeros(hex2AB(this.getHex())) : hex2AB(this.getHex());\r\n    };\r\n}\r\n\r\nclass ASN1Tag {\r\n    tagClass: any;\r\n    tagConstructed: any;\r\n    tagNumber: any;\r\n\r\n    constructor(stream) {\r\n        var buf = stream.get();\r\n        this.tagClass = buf >> 6;\r\n        this.tagConstructed = ((buf & 0x20) !== 0);\r\n        this.tagNumber = buf & 0x1F;\r\n        if (this.tagNumber == 0x1F) {\r\n            var n = new Int10();\r\n            do {\r\n                buf = stream.get();\r\n                n.mulAdd(128, buf & 0x7F);\r\n            } while (buf & 0x80);\r\n            this.tagNumber = n.simplify();\r\n        }\r\n    }\r\n\r\n    isUniversal() {\r\n        return this.tagClass === 0x00;\r\n    };\r\n\r\n    isEOC() {\r\n        return this.tagClass === 0x00 && this.tagNumber === 0x00;\r\n    };\r\n}\r\n","import { b2s, bu2b, ILLEGAL_ARGUMENT, s2AB } from \"./util\";\r\n\r\nexport class PEM {\r\n    body: ArrayBuffer | Uint8Array;\r\n    type: 'private' | 'public';\r\n\r\n    constructor(secret: string) {\r\n        if (typeof secret !== 'string') {\r\n            throw new Error(ILLEGAL_ARGUMENT);\r\n        }\r\n        this.type = 'public';\r\n\r\n        const ignore = (line: string): boolean => {\r\n            if (ignoreLinesPriv.some(ign => line.toUpperCase().indexOf(ign) > -1)) {\r\n                this.type = 'private';\r\n                return false;\r\n            }\r\n            return !ignoreLinesPub.some(ign => line.toUpperCase().indexOf(ign) > -1);\r\n        };\r\n\r\n        const lines = secret.split('\\n'),\r\n            ignoreLinesPriv = [\r\n                '-BEGIN PRIVATE KEY-',\r\n                '-END PRIVATE KEY-',\r\n                '-BEGIN EC PRIVATE KEY-',\r\n                '-END EC PRIVATE KEY-',\r\n                '-BEGIN RSA PRIVATE KEY-',\r\n                '-END RSA PRIVATE KEY-'],\r\n            ignoreLinesPub = [\r\n                '-BEGIN RSA PUBLIC KEY-',\r\n                '-BEGIN EC PUBLIC KEY-',\r\n                '-BEGIN PUBLIC KEY-',\r\n                '-END PUBLIC KEY-',\r\n                '-END EC PUBLIC KEY-',\r\n                '-END RSA PUBLIC KEY-'\r\n            ], body = lines.map(line => line.trim()).filter(line =>\r\n            line.length && ignore(line)).join('');\r\n        if (body.length) {\r\n            this.body = s2AB(b2s(bu2b(body)));\r\n            return this;\r\n        } else {\r\n            throw new Error(ILLEGAL_ARGUMENT);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { ASN1 } from \"./asn1\";\r\nimport { PEM } from \"./PEM\";\r\nimport { AB2s, ILLEGAL_ARGUMENT, s2bu, tryPromise } from \"./util\";\r\n\r\nexport const ECCurves = [\r\n    {\r\n        name: \"p-256\",\r\n        curve: \"1.2.840.10045.3.1.7\",\r\n        coordinateLength: 32\r\n    },\r\n    {\r\n        name: \"p-384\",\r\n        curve: \"1.3.132.0.34\",\r\n        coordinateLength: 48\r\n    },\r\n    {\r\n        name: \"p-384\",\r\n        curve: \"1.3.132.0.35\",\r\n        coordinateLength: 66\r\n    }\r\n];\r\n\r\nexport class EC {\r\n    static ASN1fromPEM(body: ArrayBuffer | Uint8Array): any {\r\n        if (!body) throw new Error(ILLEGAL_ARGUMENT);\r\n\r\n        if (body instanceof ArrayBuffer) body = new Uint8Array(body);\r\n        let asn1 = ASN1.decode(body);\r\n        const res = {};\r\n        if (asn1.sub.length === 3) {\r\n            res['version'] = asn1.sub[0].content(); // int\r\n\r\n            res['keyType'] = asn1.sub[1].sub[0].content(); // string\r\n            res['namedCurve'] = asn1.sub[1].sub[1].content(); // string\r\n\r\n            res['versionSub'] = asn1.sub[2].sub[0].sub[0].content(); // int\r\n            res['privateKey'] = asn1.sub[2].sub[0].sub[2].getAB(); // ArrayBuffer\r\n\r\n            res['curveTypeSub'] = asn1.sub[2].sub[0].sub[2].sub[0].content(); // string\r\n            res['publicKey'] = asn1.sub[2].sub[0].sub[3].sub[0].getAB(); // ArrayBuffer\r\n        } else if (asn1.sub.length === 2) {\r\n            res['keyType'] = asn1.sub[0].sub[0].content(); // string\r\n            res['namedCurve'] = asn1.sub[0].sub[1].content(); // string\r\n            res['publicKey'] = asn1.sub[1].getAB(); // int\r\n        }\r\n        return asn1;\r\n    }\r\n\r\n    static JWKfromASN1(asn1: any, type?: string, extra?: any): any {\r\n        const pemTypes = ['public', 'private'];\r\n        if (!asn1) throw new Error(ILLEGAL_ARGUMENT);\r\n\r\n        type = ((typeof type === 'string') && type.toLowerCase())\r\n            || pemTypes[!!asn1.privateKey ? 1 : 0];\r\n\r\n        if (type === 'private' && !asn1.privateKey) {\r\n            throw new Error(ILLEGAL_ARGUMENT);\r\n        }\r\n\r\n        const crv = ECCurves.find(c => c.curve === asn1.namedCurve);\r\n        if (!crv) {\r\n            throw new Error(ILLEGAL_ARGUMENT);\r\n        }\r\n\r\n        let publicKey = asn1.publicKey;\r\n\r\n        if (publicKey.readInt8(0) !== 4) {\r\n            throw new Error(ILLEGAL_ARGUMENT);\r\n        };\r\n        let jwk = Object.assign({ kty: 'EC', crv: crv.name }, extra, {\r\n            x: s2bu(AB2s(publicKey.slice(1, crv.coordinateLength))),\r\n            y: s2bu(AB2s(publicKey.slice(crv.coordinateLength + 1, 2*(crv.coordinateLength + 1))))\r\n        });\r\n\r\n        if (type === 'private') {\r\n            Object.assign(jwk, {\r\n                d: s2bu(AB2s(asn1.privateKey))\r\n            });\r\n        }\r\n        return jwk;\r\n    }\r\n\r\n    static JWKfromEC(secret: string, type?: \"public\" | \"private\", extra?): Promise<any> {\r\n        return tryPromise(() => {\r\n            const pem: PEM = new PEM(secret);\r\n            return EC.JWKfromASN1(EC.ASN1fromPEM(pem.body), type, extra)\r\n        })\r\n    }\r\n}\r\n\r\n","import crypto from \"crypto\";\r\nimport { AB2s, b2bu, s2AB, s2bu } from \"./util\";\r\nexport const webCrypto = typeof window === \"object\" && (window.crypto || window['msCrypto']);\r\nexport const webCryptoSubtle = webCrypto && (webCrypto.subtle || webCrypto['webkitSubtle'] || webCrypto['Subtle']);\r\n\r\nexport class HMAC {\r\n    static async createSigner(name: string, secret: string): Promise<any> {\r\n        if (webCryptoSubtle) {\r\n            const keyData = s2AB(secret);\r\n            return webCryptoSubtle.importKey(\r\n                'raw',\r\n                keyData,\r\n                { name: 'HMAC', hash: { name: name } },\r\n                true,\r\n                ['sign']\r\n            ).then(key => {\r\n                return {\r\n                    update: async function (thing): Promise<ArrayBuffer> {\r\n                        return webCryptoSubtle.sign(\r\n                            'HMAC',\r\n                            key,\r\n                            s2AB(thing)\r\n                        )\r\n                    }\r\n                }\r\n            })\r\n        } else {\r\n            return !!crypto && crypto.createHmac ? Promise.resolve(crypto.createHmac(name.replace('SHA-', 'sha'), secret)) : Promise.reject(webCrypto);\r\n        }\r\n    }\r\n\r\n    static sign(bits: number) {\r\n        return async function sign(thing: string, secret: string): Promise<string> {\r\n            const hmac = await HMAC.createSigner('SHA-' + bits, secret);\r\n            return Promise.resolve(webCryptoSubtle ? s2bu(AB2s(hmac && await hmac.update(thing))) : b2bu(hmac && hmac.update(thing).digest('base64')));\r\n        }\r\n    }\r\n\r\n    static verify(bits: number) {\r\n        return async function verify(thing: string, signature: string, secret: string): Promise<boolean> {\r\n            return await HMAC.sign(bits)(thing, secret) === signature;\r\n        }\r\n    }\r\n}\r\n","import crypto from \"crypto\";\r\nexport const webCrypto = typeof window === \"object\" && (window.crypto || window['msCrypto']);\r\nexport const webCryptoSubtle = webCrypto && (webCrypto.subtle || webCrypto['webkitSubtle'] || webCrypto['Subtle']);\r\n\r\nimport { ASN1 } from \"./asn1\";\r\nimport { PEM } from \"./PEM\";\r\nimport { AB2s, b2bu, bu2b, bu2s, ILLEGAL_ARGUMENT, s2AB, s2b, s2bu, tryPromise } from \"./util\";\r\n\r\nexport class RSA {\r\n    static ASN1fromPEM(body: ArrayBuffer | Uint8Array): any {\r\n        if (!body) throw new Error(ILLEGAL_ARGUMENT);\r\n\r\n        if (body instanceof ArrayBuffer) body = new Uint8Array(body);\r\n        let asn1 = ASN1.decode(body), res = {};\r\n\r\n        if (asn1.sub.length === 3) {\r\n            asn1 = asn1.sub[2].sub[0];\r\n        }\r\n        if (asn1.sub.length === 9) {\r\n            // Parse the private key.\r\n            res['modulus'] = asn1.sub[1].getAB(); // ArrayBuffer\r\n            res['publicExponent'] = parseInt(asn1.sub[2].getHex(), 16); // int\r\n            res['privateExponent'] = asn1.sub[3].getAB(); // ArrayBuffer\r\n            res['prime1'] = asn1.sub[4].getAB(); // ArrayBuffer\r\n            res['prime2'] = asn1.sub[5].getAB(); // ArrayBuffer\r\n            res['exponent1'] = asn1.sub[6].getAB(); // ArrayBuffer\r\n            res['exponent2'] = asn1.sub[7].getAB(); // ArrayBuffer\r\n            res['coefficient'] = asn1.sub[8].getAB(); // ArrayBuffer\r\n        } else if (asn1.sub.length === 2) {\r\n            // Parse the public key.\r\n            asn1 = asn1.sub[1].sub[0];\r\n\r\n            res['modulus'] = asn1.sub[0].getAB(); // ArrayBuffer\r\n            res['publicExponent'] = parseInt(asn1.sub[1].getHex(), 16); // int\r\n        }\r\n\r\n        res['bits'] = (res['modulus'].length - 1) * 8 + Math.ceil(\r\n            Math.log(res['modulus'][0] + 1) / Math.log(2)\r\n        );\r\n\r\n        if (!res['bits']) {\r\n            throw new Error(ILLEGAL_ARGUMENT);\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    static JWKfromASN1(asn1: any, type?: string, extra?: any): any {\r\n        const pemTypes = ['public', 'private'];\r\n        if (!asn1) throw new Error(ILLEGAL_ARGUMENT);\r\n\r\n        type = ((typeof type === 'string') && type.toLowerCase())\r\n            || pemTypes[!!asn1.privateExponent ? 1 : 0];\r\n\r\n        if (type === 'private' && !asn1.privateExponent) {\r\n            throw new Error(ILLEGAL_ARGUMENT);\r\n        }\r\n        let v = asn1.publicExponent;\r\n        const expSize = Math.ceil(Math.log(v) / Math.log(256));\r\n        const exp = new Uint8Array(expSize).map(function (el) {\r\n            el = v % 256;\r\n            v = Math.floor(v / 256);\r\n            return el\r\n        }).reverse();\r\n\r\n        let jwk = Object.assign({ kty: 'RSA' }, extra, {\r\n            n: s2bu(AB2s(asn1.modulus)),\r\n            e: s2bu(AB2s(exp)),\r\n        });\r\n\r\n        if (type === 'private') {\r\n            Object.assign(jwk, {\r\n                d: s2bu(AB2s(asn1.privateExponent)),\r\n                p: s2bu(AB2s(asn1.prime1)),\r\n                q: s2bu(AB2s(asn1.prime2)),\r\n                dp: s2bu(AB2s(asn1.exponent1)),\r\n                dq: s2bu(AB2s(asn1.exponent2)),\r\n                qi: s2bu(AB2s(asn1.coefficient))\r\n            });\r\n        }\r\n        return jwk;\r\n    }\r\n\r\n    static JWKfromRSA(secret: string, type?: \"public\" | \"private\", extra?): Promise<any> {\r\n        return tryPromise(() => {\r\n            const pem: PEM = new PEM(secret);\r\n            return RSA.JWKfromASN1(RSA.ASN1fromPEM(pem.body), type, extra)\r\n        })\r\n    }\r\n\r\n    static createSigner(name: string): any {\r\n        if (webCryptoSubtle) {\r\n            return {\r\n                update: function (thing: string): any {\r\n                    return {\r\n                        sign: async function (secret: string, encoding: string): Promise<any> {\r\n                            return RSA.JWKfromRSA(secret, 'private', {\r\n                                key_ops: ['sign'],\r\n                                alg: name.replace('SHA-', 'RS')\r\n                            }).then(async keyData => {\r\n                                return webCryptoSubtle.importKey(\r\n                                    'jwk',\r\n                                    keyData,\r\n                                    { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\r\n                                    true,\r\n                                    ['sign']\r\n                                ).then(async key => {\r\n                                    return webCryptoSubtle.sign(\r\n                                        { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\r\n                                        key,\r\n                                        s2AB(thing)\r\n                                    ).then(AB2s).then(s2b)\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (crypto && crypto.createSign) {\r\n                return crypto.createSign(name.replace('SHA-', 'RSA-SHA'))\r\n            } else {\r\n                throw new Error(ILLEGAL_ARGUMENT);\r\n            }\r\n        }\r\n    }\r\n\r\n    static sign(bits: number) {\r\n        return async function sign(thing: string, privateKey: string): Promise<string> {\r\n            return tryPromise(() => {\r\n                return RSA.createSigner('SHA-' + bits)\r\n                    .then(res => res\r\n                        .update(thing)\r\n                        .sign(privateKey, 'base64')\r\n                        .then(b2bu)\r\n                    );\r\n            });\r\n        }\r\n    }\r\n\r\n    static createVerifier(name: string): any {\r\n        if (webCryptoSubtle) {\r\n            return {\r\n                update: function (thing: string): any {\r\n                    return {\r\n                        verify: async function (secret: string, signature: string, encoding: string): Promise<boolean> {\r\n                            return RSA.JWKfromRSA(secret, 'public', {\r\n                                key_ops: ['verify'],\r\n                                alg: name.replace('SHA-', 'RS')\r\n                            }).then(async ({ kty, n, e }) => {\r\n                                return webCryptoSubtle.importKey(\r\n                                    'jwk',\r\n                                    { kty, n, e },\r\n                                    { name: 'RSASSA-PKCS1-v1_5', hash: { name: name } },\r\n                                    false,\r\n                                    ['verify']\r\n                                ).then(key => {\r\n                                    return webCryptoSubtle.verify(\r\n                                        'RSASSA-PKCS1-v1_5',\r\n                                        key,\r\n                                        s2AB(bu2s(signature)),\r\n                                        s2AB(thing)\r\n                                    )\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (crypto && crypto.createVerify) {\r\n                return crypto.createVerify(name.replace('SHA-', 'RSA-SHA'))\r\n            } else {\r\n                throw new Error(ILLEGAL_ARGUMENT);\r\n            }\r\n        }\r\n    }\r\n\r\n    static verify(bits: number) {\r\n        return async function verify(thing: string, signature: string, publicKey: string): Promise<boolean> {\r\n            try {\r\n                return await RSA.createVerifier('SHA-' + bits)\r\n                    .then(res => res\r\n                        .update(thing)\r\n                        .verify(publicKey, bu2b(signature), 'base64')\r\n                    );\r\n            } catch (e) {\r\n                return Promise.reject(new Error(e.message));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { ASN1 } from \"./asn1\";\r\nimport { EC } from \"./EC\";\r\nimport { HMAC } from \"./HMAC\";\r\nimport { PEM } from \"./PEM\";\r\nimport { RSA } from \"./RSA\";\r\nimport {\r\n    AB2hex,\r\n    AB2s,\r\n    b2bu,\r\n    b2s,\r\n    bu2b,\r\n    bu2s,\r\n    cleanZeros,\r\n    hex2AB,\r\n    ILLEGAL_ARGUMENT,\r\n    num2hex,\r\n    s2AB,\r\n    s2b,\r\n    s2bu,\r\n    tryPromise,\r\n    UNSUPPORTED_ALGORITHM\r\n} from \"./util\";\r\n\r\nexport const jwkJs = {\r\n    ASN1,\r\n    EC,\r\n    PEM,\r\n    RSA,\r\n    HMAC,\r\n    ILLEGAL_ARGUMENT,\r\n    UNSUPPORTED_ALGORITHM,\r\n    tryPromise,\r\n    AB2hex,\r\n    AB2s,\r\n    b2bu,\r\n    b2s,\r\n    bu2b,\r\n    bu2s,\r\n    cleanZeros,\r\n    hex2AB,\r\n    num2hex,\r\n    s2AB,\r\n    s2b,\r\n    s2bu\r\n};\r\n\r\nexport default jwkJs;\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport jwkJs from \"jwk-js\";\r\n\r\nexport class EC {\r\n    private static EC: string = \"EC\";\r\n    private static SUNEC: string = \"SunEC\";// Sun's ECC provider\r\n\r\n    /**\r\n     * Returns a private key constructed from the given DER bytes in PKCS#8 format.\r\n     */\r\n    public static privateKeyFromPKCS8(pkcs8: ArrayBuffer | Uint8Array){\r\n        try {\r\n            return jwkJs.EC.JWKfromEC(jwkJs.AB2s(pkcs8), \"private\");\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a public key constructed from the given DER bytes.\r\n     */\r\n    public static publicKeyFrom(derBytes: ArrayBuffer | Uint8Array){\r\n        try {\r\n            return jwkJs.EC.JWKfromEC(jwkJs.AB2s(derBytes), \"public\");\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n}\r\n","export function equalsIgnoreCase(a: string, b: string): boolean {\r\n    return !!a && !!b && a.toUpperCase() === b.toUpperCase();\r\n}\r\nexport default { equalsIgnoreCase }\r\n","export class StringBuilder {\r\n    str: string = \"\";\r\n\r\n    get length() {\r\n        return this.str.length;\r\n    }\r\n\r\n    public toString(): string {\r\n        return this.str;\r\n    }\r\n\r\n    public toNumber(): number {\r\n        return +this.str;\r\n    }\r\n\r\n    public lastIndexOf(str: string): number {\r\n        return this.str.lastIndexOf(str);\r\n    }\r\n\r\n    public append(str: any): StringBuilder {\r\n        if (!!str && str.toString) this.str = this.str.concat(str.toString());\r\n        return this;\r\n    }\r\n\r\n    public deleteCharAt(i: number): StringBuilder {\r\n        this.str = this.str.slice(0, i) + this.str.slice(i + 1, this.str.length);\r\n        return this;\r\n    }\r\n\r\n    public insert(i: number, str: string): StringBuilder {\r\n        this.str = this.str.slice(0, i) + str + this.str.slice(i, this.str.length);\r\n        return this\r\n    }\r\n}\r\n\r\nexport default { StringBuilder };\r\n","export type ITimeUnit = \"NANOSECONDS\" | \"MICROSECONDS\" | \"MILLISECONDS\" | \"SECONDS\" | \"MINUTES\" | \"HOURS\" | \"DAYS\";\r\n\r\nexport enum TimeUnitEnum {\r\n    NANOSECONDS,\r\n    MICROSECONDS,\r\n    MILLISECONDS,\r\n    SECONDS,\r\n    MINUTES,\r\n    HOURS,\r\n    DAYS\r\n}\r\n\r\nexport enum TimeUnitValue {\r\n    NANOSECONDS = 1,\r\n    MICROSECONDS = TimeUnitValue.NANOSECONDS * 1000,\r\n    MILLISECONDS = TimeUnitValue.MICROSECONDS * 1000,\r\n    SECONDS = TimeUnitValue.MILLISECONDS * 1000,\r\n    MINUTES = TimeUnitValue.SECONDS * 60,\r\n    HOURS = TimeUnitValue.MINUTES * 60,\r\n    DAYS = TimeUnitValue.HOURS * 24\r\n}\r\n\r\nexport class TimeUnit {\r\n    public constructor(timeOrdinal) {\r\n        if (TimeUnit.ordinals().indexOf(timeOrdinal) > -1) {\r\n            this.timeOrdinal = <number> timeOrdinal;\r\n            this.timeUnit = <ITimeUnit> TimeUnitEnum[timeOrdinal];\r\n        } else if (TimeUnit.values().indexOf(timeOrdinal) > -1) {\r\n            this.timeOrdinal = <number> TimeUnit.values().indexOf(timeOrdinal);\r\n            this.timeUnit = <ITimeUnit> timeOrdinal;\r\n        } else {\r\n            // wrong TimeUnit constructor call\r\n        }\r\n    }\r\n\r\n    public timeUnit: ITimeUnit;\r\n    public timeOrdinal: number;\r\n\r\n    static NANOSECONDS: TimeUnit = new TimeUnit(TimeUnitEnum.NANOSECONDS);\r\n    static MICROSECONDS: TimeUnit = new TimeUnit(TimeUnitEnum.MICROSECONDS);\r\n    static MILLISECONDS: TimeUnit = new TimeUnit(TimeUnitEnum.MILLISECONDS);\r\n    static SECONDS: TimeUnit = new TimeUnit(TimeUnitEnum.SECONDS);\r\n    static MINUTES: TimeUnit = new TimeUnit(TimeUnitEnum.MINUTES);\r\n    static HOURS: TimeUnit = new TimeUnit(TimeUnitEnum.HOURS);\r\n    static DAYS: TimeUnit = new TimeUnit(TimeUnitEnum.DAYS);\r\n\r\n    public name(): ITimeUnit {\r\n        return <ITimeUnit> this.timeUnit;\r\n    }\r\n\r\n    get ordinal(): number {\r\n        return <number> this.timeOrdinal;\r\n    }\r\n\r\n    static ordinals(): number[] {\r\n        return <any> Object.keys(TimeUnitEnum).filter(function (i) {\r\n            return (typeof TimeUnitEnum[i] === \"string\") && isFinite(+i);\r\n        }).map(i => parseInt(i));\r\n    }\r\n\r\n    static values(): TimeUnit[] {\r\n        return this.ordinals().map(function (i) {\r\n            return new TimeUnit(i);\r\n        });\r\n    }\r\n\r\n    public valueOf(): number {\r\n        return <number> TimeUnitValue[this.timeUnit];\r\n    }\r\n\r\n    public toNanos(duration: number): number {\r\n        // another alternative would have been\r\n        // return Math.trunc((duration * this.toNumber()) / TimeUnitValue.NANOSECONDS);\r\n        return TimeUnit.NANOSECONDS.convert(duration, this);\r\n    }\r\n\r\n    public toMicros(duration: number): number {\r\n        return TimeUnit.MICROSECONDS.convert(duration, this);\r\n    }\r\n\r\n    public toMillis(duration: number): number {\r\n        return TimeUnit.MILLISECONDS.convert(duration, this);\r\n    }\r\n\r\n    public toSeconds(duration: number): number {\r\n        return TimeUnit.SECONDS.convert(duration, this);\r\n    }\r\n\r\n    public toMinutes(duration: number): number {\r\n        return TimeUnit.MINUTES.convert(duration, this);\r\n    }\r\n\r\n    public toHours(duration: number): number {\r\n        return TimeUnit.HOURS.convert(duration, this);\r\n    }\r\n\r\n    public toDays(duration: number): number {\r\n        return TimeUnit.DAYS.convert(duration, this);\r\n    }\r\n\r\n    public convert(duration: number, sourceUnit: TimeUnit): number {\r\n        return Math.trunc((duration * sourceUnit.valueOf()) / this.valueOf());\r\n    }\r\n}\r\n\r\nexport default {TimeUnitEnum, TimeUnitValue, TimeUnit};\r\n","import { StringBuilder } from \"./StringBuilder\";\r\nimport { TimeUnit } from \"./TimeUnit\";\r\n\r\nexport class TimeUtils {\r\n    public static formatNanos(duration: number, min: TimeUnit = TimeUtils.min(), max: TimeUnit = TimeUtils.max()): string {\r\n        return TimeUtils.format(duration, TimeUnit.NANOSECONDS, min, max);\r\n    }\r\n\r\n    public static formatMillis(duration: number, min: TimeUnit = TimeUtils.min(), max: TimeUnit = TimeUtils.max()): string {\r\n        return TimeUtils.format(duration, TimeUnit.MILLISECONDS, min, max);\r\n    }\r\n\r\n    public static format(duration: number, sourceUnit: TimeUnit, min: TimeUnit = TimeUtils.min(), max: TimeUnit = TimeUtils.max()): string {\r\n        let res: StringBuilder = new StringBuilder();\r\n\r\n        let suffix: string = \"\";\r\n        if (duration < 0) {\r\n            duration = duration * -1;\r\n            suffix = \" ago\";\r\n        }\r\n\r\n        let current: TimeUnit = max;\r\n\r\n        while (duration > 0) {\r\n            const temp: number = current.convert(duration, sourceUnit);\r\n\r\n            if (temp > 0) {\r\n\r\n                duration -= sourceUnit.convert(temp, current);\r\n                res.append(temp.toString()).append(\" \").append(current.name().toLowerCase());\r\n\r\n                if (temp < 2) {\r\n                    res.deleteCharAt(res.length - 1);\r\n                }\r\n\r\n                res.append(\", \");\r\n            }\r\n\r\n            if (current.ordinal === min.ordinal) {\r\n                break;\r\n            }\r\n\r\n            current = TimeUnit.values()[current.ordinal - 1];\r\n        }\r\n\r\n        // we never got a hit, the time is lower than we care about\r\n        if (res.lastIndexOf(\", \") < 0) {\r\n            return \"0 \" + min.name().toLowerCase();\r\n        }\r\n\r\n        // yank trailing  \", \"\r\n        res.deleteCharAt(res.length - 1);\r\n        res.deleteCharAt(res.length - 1);\r\n\r\n        //  convert last \", \" to \" and\"\r\n        let i: number = res.lastIndexOf(\", \");\r\n        if (i > 0) {\r\n            res.deleteCharAt(i);\r\n            res.insert(i, \" and\");\r\n        }\r\n\r\n        res.append(suffix);\r\n\r\n        return res.toString();\r\n    }\r\n\r\n    public static formatHighest(duration: number, max: TimeUnit, min: TimeUnit = this.min()): string {\r\n        const units: TimeUnit[] = TimeUnit.values();\r\n        let res: StringBuilder = new StringBuilder();\r\n\r\n        let current: TimeUnit = max;\r\n\r\n        while (duration > 0) {\r\n            const temp: number = current.convert(duration, TimeUnit.MILLISECONDS);\r\n\r\n            if (temp > 0) {\r\n\r\n                duration -= current.toMillis(temp);\r\n\r\n                res.append(temp.toString()).append(\" \").append(current.name().toLowerCase());\r\n\r\n                if (temp < 2) {\r\n                    res.deleteCharAt(res.length - 1);\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            if (current.ordinal === min.ordinal) {\r\n                break;\r\n            }\r\n\r\n            current = units[(current.ordinal - 1)];\r\n        }\r\n\r\n        // we never got a hit, the time is lower than we care about\r\n        return res.toString();\r\n    }\r\n\r\n    public static max() {\r\n        let values: TimeUnit[] = TimeUnit.values();\r\n        return values[values.length - 1];\r\n    }\r\n\r\n    public static min() {\r\n        let values: TimeUnit[] = TimeUnit.values();\r\n        return values[0];\r\n    }\r\n\r\n    private static abbreviateString(time: string): string {\r\n        time = time.replace(new RegExp(\" days?\", 'ig'), \"d\");\r\n        time = time.replace(new RegExp(\" hours?\", 'ig'), \"hr\");\r\n        time = time.replace(new RegExp(\" minutes?\", 'ig'), \"m\");\r\n        time = time.replace(new RegExp(\" seconds?\", 'ig'), \"s\");\r\n        time = time.replace(new RegExp(\" milliseconds?\", 'ig'), \"ms\");\r\n        return time;\r\n    }\r\n\r\n    public static abbreviate(duration: string | number,\r\n                             sourceUnit?: TimeUnit,\r\n                             min: TimeUnit = TimeUtils.min(),\r\n                             max: TimeUnit = TimeUtils.max()): string {\r\n        if (sourceUnit && typeof duration === \"number\") {\r\n            let format: string = TimeUtils.format(<number> duration, sourceUnit, min, max);\r\n            return TimeUtils.abbreviateString(format);\r\n        } else if (typeof duration === \"string\") {\r\n            return TimeUtils.abbreviateString(<string> duration);\r\n        } else {\r\n            return 'Wrong duration argument type ' + typeof duration;\r\n            // error wrong abbreviate usage\r\n        }\r\n    }\r\n}\r\n","import { equalsIgnoreCase } from \"./CommonUtils\";\r\nimport { StringBuilder } from \"./StringBuilder\";\r\nimport { TimeUnit } from \"./TimeUnit\";\r\nimport { TimeUtils } from \"./TimeUtils\";\r\n\r\nexport class LongDuration {\r\n    /*private*/\r\n    time: number = 0;\r\n\r\n    /*private*/\r\n    unit: TimeUnit;\r\n\r\n    defaultErrorHandler: (p1: Error) => void = (e) => {\r\n        throw e;\r\n    };\r\n\r\n    valueOf() :number {\r\n        if (!!this.unit) {\r\n            return this.time * this.unit.valueOf()\r\n        } else {\r\n            throw new Error('No timme unit');\r\n        }\r\n    }\r\n\r\n    public constructor(text?: any, consumer?: any) {\r\n        if (((typeof text === 'string') || !text) && ((typeof consumer === 'function' && (<any>consumer).length == 1) || !consumer)) {\r\n            this.parseLongDuration(text, <any>(consumer));\r\n        } else if (((typeof text === 'number') || !text) && ((typeof consumer === 'number') || !consumer)) {\r\n            this.time = text;\r\n            this.unit = new TimeUnit(consumer);\r\n        } else if ((typeof text === 'number') && (consumer instanceof TimeUnit)) {\r\n            this.time = text;\r\n            this.unit = consumer;\r\n        } else this.invalidFormat(text, this.defaultErrorHandler);\r\n    }\r\n\r\n    parseLongDuration(string: string, consumer?: any) {\r\n        let strings: string[] = string.split(new RegExp(\",| and \", 'ig'));\r\n        let total: LongDuration = new LongDuration(0, TimeUnit.MILLISECONDS);\r\n        for (let index = 0; index < strings.length; index++) {\r\n            let value = strings[index];\r\n            {\r\n                let part: LongDuration = new LongDuration(0, TimeUnit.MILLISECONDS);\r\n                let trimedValue: string = value.trim();\r\n\r\n                let number: StringBuilder = new StringBuilder();\r\n                let unit: StringBuilder = new StringBuilder();\r\n\r\n                let i: number = 0;\r\n                for (; i < trimedValue.length; i++) {\r\n                    let c: string = trimedValue.charAt(i);\r\n                    if (/* isDigit *//\\d/.test(c[0]) || i === 0 && (c => c.charCodeAt == null ? <any>c : c.charCodeAt(0))(c) == '-'.charCodeAt(0)) {\r\n                        number.append(c);\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (number.length === 0) {\r\n                    this.invalidFormat(trimedValue, this.defaultErrorHandler);\r\n                    return;\r\n                }\r\n\r\n                for (; i < trimedValue.length; i++) {\r\n                    let c: string = trimedValue.charAt(i);\r\n                    if (/* isLetter *//[a-zA-Z ]/.test(c[0])) {\r\n                        unit.append(c);\r\n                    } else {\r\n                        this.invalidFormat(trimedValue, this.defaultErrorHandler);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                part.time = parseInt(number.toString());\r\n                part.unit = this.parseUnit(unit.toString().trim(), this.defaultErrorHandler);\r\n                if (part.unit == null) {\r\n                    part.unit = TimeUnit.MILLISECONDS;\r\n                }\r\n                total = total.add(part);\r\n            }\r\n        }\r\n        this.time = total.time;\r\n        this.unit = total.unit;\r\n    }\r\n\r\n    public getTime(unit: TimeUnit): number {\r\n        return unit.convert(this.time, this.unit);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {*} o\r\n     * @return {boolean}\r\n     */\r\n    public equals(o: any): boolean {\r\n        if (this === o) {\r\n            return true;\r\n        }\r\n        if (o == null || (<any>this.constructor) !== (<any>o.constructor)) {\r\n            return false;\r\n        }\r\n        let that: LongDuration = <LongDuration>o;\r\n        let n: LongDuration.Normalize = new LongDuration.Normalize(this, that);\r\n        return n.a === n.b;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {number}\r\n     */\r\n    public hashCode(): number {\r\n        let result: number = (<number>(this.time ^ (this.time >>> 32)) | 0);\r\n        result = 31 * result + this.unit.ordinal;\r\n        return result;\r\n    }\r\n\r\n    public add(that: LongDuration): LongDuration {\r\n        let n: LongDuration.Normalize = new LongDuration.Normalize(this, that);\r\n        return new LongDuration(n.a + n.b, n.base);\r\n    }\r\n\r\n    public subtract(that: LongDuration): LongDuration {\r\n        let n: LongDuration.Normalize = new LongDuration.Normalize(this, that);\r\n        return new LongDuration(n.a - n.b, n.base);\r\n    }\r\n\r\n    invalidFormat(text: string, errorHandler: (p1: Error) => void) {\r\n        (target => (typeof target === 'function') ? target(Object.defineProperty(new Error(\"Illegal duration format: \\'\" + text + \"\\'.  Valid examples are \\'10s\\' or \\'10 seconds\\'.\"), '__classes', {\r\n            configurable: true,\r\n            value: ['java.lang.Throwable', 'java.lang.Object', 'java.lang.RuntimeException', 'java.lang.IllegalArgumentException', 'java.lang.Exception']\r\n        })) : (<any>target).accept(Object.defineProperty(new Error(\"Illegal duration format: \\'\" + text + \"\\'.  Valid examples are \\'10s\\' or \\'10 seconds\\'.\"), '__classes', {\r\n            configurable: true,\r\n            value: ['java.lang.Throwable', 'java.lang.Object', 'java.lang.RuntimeException', 'java.lang.IllegalArgumentException', 'java.lang.Exception']\r\n        })))(errorHandler);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     */\r\n    public toString(): string {\r\n        let sb: StringBuilder = new StringBuilder();\r\n        sb.append(<any>this.time);\r\n        if (this.unit != null) {\r\n            sb.append(<any>\" \");\r\n            sb.append(<any>this.unit);\r\n        }\r\n        return sb.toString();\r\n    }\r\n\r\n    /**\r\n     * Converts time to a human readable format within the specified range\r\n     *\r\n     * @param {TimeUnit} max      the highest time unit of interest\r\n     * @return {string}\r\n     */\r\n    public formatHighest(max: TimeUnit = TimeUtils.max()): string {\r\n        return TimeUtils.format(this.time, this.unit, TimeUnit.MILLISECONDS, max);\r\n    }\r\n\r\n    parseUnit(u: string, errorHandler: (p1: Error) => void): TimeUnit {\r\n        if (u.length === 0) {\r\n            throw new Error('Invalid unit');\r\n        }\r\n        if (equalsIgnoreCase(\"NANOSECONDS\", u)) return TimeUnit.NANOSECONDS;\r\n        if (equalsIgnoreCase(\"NANOSECOND\", u)) return TimeUnit.NANOSECONDS;\r\n        if (equalsIgnoreCase(\"NANOS\", u)) return TimeUnit.NANOSECONDS;\r\n        if (equalsIgnoreCase(\"NANO\", u)) return TimeUnit.NANOSECONDS;\r\n        if (equalsIgnoreCase(\"NS\", u)) return TimeUnit.NANOSECONDS;\r\n        if (equalsIgnoreCase(\"MICROSECONDS\", u)) return TimeUnit.MICROSECONDS;\r\n        if (equalsIgnoreCase(\"MICROSECOND\", u)) return TimeUnit.MICROSECONDS;\r\n        if (equalsIgnoreCase(\"MICROS\", u)) return TimeUnit.MICROSECONDS;\r\n        if (equalsIgnoreCase(\"MICRO\", u)) return TimeUnit.MICROSECONDS;\r\n        if (equalsIgnoreCase(\"MILLISECONDS\", u)) return TimeUnit.MILLISECONDS;\r\n        if (equalsIgnoreCase(\"MILLISECOND\", u)) return TimeUnit.MILLISECONDS;\r\n        if (equalsIgnoreCase(\"MILLIS\", u)) return TimeUnit.MILLISECONDS;\r\n        if (equalsIgnoreCase(\"MILLI\", u)) return TimeUnit.MILLISECONDS;\r\n        if (equalsIgnoreCase(\"MS\", u)) return TimeUnit.MILLISECONDS;\r\n        if (equalsIgnoreCase(\"SECONDS\", u)) return TimeUnit.SECONDS;\r\n        if (equalsIgnoreCase(\"SECOND\", u)) return TimeUnit.SECONDS;\r\n        if (equalsIgnoreCase(\"SEC\", u)) return TimeUnit.SECONDS;\r\n        if (equalsIgnoreCase(\"S\", u)) return TimeUnit.SECONDS;\r\n        if (equalsIgnoreCase(\"MINUTES\", u)) return TimeUnit.MINUTES;\r\n        if (equalsIgnoreCase(\"MINUTE\", u)) return TimeUnit.MINUTES;\r\n        if (equalsIgnoreCase(\"MIN\", u)) return TimeUnit.MINUTES;\r\n        if (equalsIgnoreCase(\"M\", u)) return TimeUnit.MINUTES;\r\n        if (equalsIgnoreCase(\"HOURS\", u)) return TimeUnit.HOURS;\r\n        if (equalsIgnoreCase(\"HOUR\", u)) return TimeUnit.HOURS;\r\n        if (equalsIgnoreCase(\"HRS\", u)) return TimeUnit.HOURS;\r\n        if (equalsIgnoreCase(\"HR\", u)) return TimeUnit.HOURS;\r\n        if (equalsIgnoreCase(\"H\", u)) return TimeUnit.HOURS;\r\n        if (equalsIgnoreCase(\"DAYS\", u)) return TimeUnit.DAYS;\r\n        if (equalsIgnoreCase(\"DAY\", u)) return TimeUnit.DAYS;\r\n        if (equalsIgnoreCase(\"D\", u)) return TimeUnit.DAYS;\r\n\r\n        this.invalidFormat(u, errorHandler);\r\n        throw new Error('Invalid format');\r\n    }\r\n}\r\n\r\nexport namespace LongDuration {\r\n\r\n    export class Normalize {\r\n        a: number = 0;\r\n\r\n        b: number = 0;\r\n\r\n        base: TimeUnit;\r\n\r\n        constructor(a: LongDuration, b: LongDuration) {\r\n            this.base = Normalize.lowest(a, b);\r\n            this.a = a.unit == null ? a.time : this.base.convert(a.time, a.unit);\r\n            this.b = b.unit == null ? b.time : this.base.convert(b.time, b.unit);\r\n        }\r\n\r\n        static lowest(a: LongDuration, b: LongDuration): TimeUnit {\r\n            if (a.time === 0 || a.unit == null) return b.unit;\r\n            if (b.time === 0 || b.unit == null) return a.unit;\r\n            return TimeUnit.values()[Math.min(a.unit.ordinal, b.unit.ordinal)];\r\n        }\r\n    }\r\n}\r\n\r\nexport default { LongDuration };\r\n","/**\r\n * @ngdoc overview\r\n * @name ts-tomitribe-util\r\n * @function\r\n *\r\n * @description\r\n * Tomitribe utilities converted for ts usage\r\n *\r\n * @example\r\n      import { TimeUnit, LongDuration } from 'ts-tomitribe-util';\r\n\r\n      let duration = new LongDuration(\"30 minutes, 20 seconds and 15 nanoseconds\");\r\n */\r\n\r\nexport * from \"./lib\";\r\n","/**\r\n * @module\r\n * @description\r\n * Tomitribe-utils package.\r\n */\r\n\r\nexport * from './src/tomitribe-util';\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { StringBuilder } from \"ts-tomitribe-util\";\r\nimport { Collection } from \"./Collection\";\r\n\r\nexport class Join {\r\n    public static join(delimiter : string, ...collection : (Collection|string)[]) : string {\r\n        if(collection.length === 0) {\r\n            return \"\";\r\n        } else if(collection[0] instanceof Array) {\r\n            collection = collection[0] as Collection;\r\n        }\r\n        let sb:StringBuilder = new StringBuilder();\r\n\r\n        for(let obj of collection) {\r\n            sb.append(obj).append(delimiter);\r\n        }\r\n        return sb.toString().substring(0, sb.length - delimiter.length);\r\n    }\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { AuthenticationException } from \"./AuthenticationException\";\r\n\r\nexport class MissingAlgorithmException  extends AuthenticationException {\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { AuthenticationException } from \"./AuthenticationException\";\r\n\r\nexport class MissingKeyIdException  extends AuthenticationException {\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { AuthenticationException } from \"./AuthenticationException\";\r\n\r\nexport class MissingRequiredHeaderException  extends AuthenticationException {\r\n    public constructor(key: string) {\r\n        super(key);\r\n    }\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { AuthenticationException } from \"./AuthenticationException\";\r\n\r\nexport class MissingSignatureException  extends AuthenticationException {\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport jwkJs from \"jwk-js\";\r\n\r\nexport class RSA {\r\n    private static RSA: string = \"RSA\";\r\n\r\n    /**\r\n     * Returns a private key constructed from the given DER bytes in PKCS#8 format.\r\n     */\r\n    public static privateKeyFromPKCS8(pkcs8: ArrayBuffer | Uint8Array){\r\n        try {\r\n            return jwkJs.RSA.JWKfromRSA(jwkJs.AB2s(pkcs8), \"private\");\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a private key constructed from the given DER bytes in PKCS#1 format.\r\n     */\r\n    public static privateKeyFromPKCS1(pkcs1: ArrayBuffer | Uint8Array){\r\n        try {\r\n            return jwkJs.RSA.JWKfromRSA(jwkJs.AB2s(pkcs1), \"private\");\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a public key constructed from the given DER bytes.\r\n     */\r\n    public static publicKeyFrom(derBytes: ArrayBuffer | Uint8Array){\r\n        try {\r\n            return jwkJs.RSA.JWKfromRSA(jwkJs.AB2s(derBytes), \"public\");\r\n        } catch (e) {\r\n            throw new Error(e);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport jwkJs from \"jwk-js\";\r\nimport { StringBuilder } from \"ts-tomitribe-util\";\r\nimport { EC } from \"./EC\";\r\nimport { RSA } from \"./RSA\";\r\n\r\nexport class BufferedReader {\r\n    private str: string[];\r\n    private cursor: number;\r\n\r\n    constructor(str) {\r\n        this.str = str.split(/\\r?\\n/);\r\n        this.cursor = 0;\r\n    }\r\n\r\n    readline(cursor?): string | null {\r\n        if (cursor) {\r\n            this.cursor = cursor;\r\n        }\r\n        const res: string | null = this.str.length > this.cursor ? this.str[this.cursor] : null;\r\n        this.cursor++;\r\n        return res;\r\n    }\r\n}\r\n\r\nexport class PEM {\r\n    static BEGIN_MARKER: string = \"-----BEGIN \";\r\n\r\n    public static readPrivateKey(is: string) {\r\n        const objects: PEMObject[] = PEM.readPEMObjects(is);\r\n        for (let object of objects) {\r\n            switch (object.getPEMObjectType()) {\r\n                case PEMObjectType.PRIVATE_KEY_PKCS:\r\n                    return RSA.privateKeyFromPKCS1(object.getDerBytes());\r\n                case PEMObjectType.PRIVATE_EC_KEY_PKCS8:\r\n                    return EC.privateKeyFromPKCS8(object.getDerBytes());\r\n                case PEMObjectType.PRIVATE_KEY_PKCS8:\r\n                    try {\r\n                        return RSA.privateKeyFromPKCS8(object.getDerBytes());\r\n                    } catch (e) {\r\n                        return EC.privateKeyFromPKCS8(object.getDerBytes());\r\n                    }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        throw new Error(\"Found no private key\");\r\n    }\r\n\r\n    public static readPublicKey(is: string) {\r\n        const objects: PEMObject[] = PEM.readPEMObjects(is);\r\n        for (let object of objects) {\r\n            switch (object.getPEMObjectType()) {\r\n                case PEMObjectType.PUBLIC_KEY_X509:\r\n                    try {\r\n                        return RSA.publicKeyFrom(object.getDerBytes());\r\n                    } catch (e) {\r\n                        return EC.publicKeyFrom(object.getDerBytes());\r\n                    }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        throw new Error(\"Found no private key\");\r\n    }\r\n\r\n    static readPEMObjects(is: string): PEMObject[] {\r\n        let reader: BufferedReader = new BufferedReader(is);\r\n        try {\r\n            let pemContents: PEMObject[] = [];\r\n            let readingContent: boolean = false;\r\n            let beginMarker: string = \"\";\r\n            let endMarker: string = \"\";\r\n            let sb: StringBuilder = new StringBuilder();\r\n            let line: string | null;\r\n            while ((line = reader.readline()) != null) {\r\n                {\r\n                    if (readingContent) {\r\n                        if (line.includes(endMarker)) {\r\n                            pemContents.push(new PEMObject(beginMarker, jwkJs.s2AB(sb.toString())));\r\n                            readingContent = false;\r\n                        } else {\r\n                            sb.append(<any>line.trim());\r\n                        }\r\n                    } else {\r\n                        if (line.includes(PEM.BEGIN_MARKER)) {\r\n                            readingContent = true;\r\n                            beginMarker = line.trim();\r\n                            endMarker = beginMarker.replace(\"BEGIN\", \"END\");\r\n                            sb = new StringBuilder();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return pemContents;\r\n        } finally {\r\n            try {\r\n            } catch (ignore) {\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class PEMObject {\r\n    private beginMarker: string;\r\n\r\n    private derBytes: ArrayBuffer | Uint8Array;\r\n\r\n    public constructor(beginMarker: string, derBytes: ArrayBuffer | Uint8Array) {\r\n        this.beginMarker = beginMarker;\r\n        this.derBytes = derBytes;\r\n    }\r\n\r\n    public getBeginMarker(): string {\r\n        return this.beginMarker;\r\n    }\r\n\r\n    public getDerBytes(): ArrayBuffer | Uint8Array {\r\n        return this.derBytes[0];\r\n    }\r\n\r\n    public getPEMObjectType(): PEMObjectType {\r\n        return PEMObjectType.fromBeginMarker(this.beginMarker);\r\n    }\r\n}\r\n\r\nexport class PEMObjectType {\r\n    public static values: PEMObjectType[] = [];\r\n\r\n    public static PRIVATE_KEY_PKCS = new PEMObjectType(\"-----BEGIN RSA PRIVATE KEY-----\");\r\n    public static PRIVATE_EC_KEY_PKCS8 = new PEMObjectType(\"-----BEGIN EC PRIVATE KEY-----\"); // RFC-5915\r\n    public static PRIVATE_KEY_PKCS8 = new PEMObjectType(\"-----BEGIN PRIVATE KEY-----\");\r\n    public static PUBLIC_KEY_X509 = new PEMObjectType(\"-----BEGIN PUBLIC KEY-----\");\r\n    public static CERTIFICATE_X509 = new PEMObjectType(\"-----BEGIN CERTIFICATE-----\");\r\n\r\n    protected beginMarker: string;\r\n\r\n    public getBeginMarker(): string {\r\n        return this.beginMarker;\r\n    }\r\n\r\n    constructor(beginMarker: string) {\r\n        this.beginMarker = beginMarker;\r\n        PEMObjectType.values.push(this);\r\n    }\r\n\r\n    public static fromBeginMarker(beginMarker: string): PEMObjectType {\r\n        return PEMObjectType.values.find(objType => objType.getBeginMarker() === beginMarker) as PEMObjectType;\r\n    }\r\n}\r\n\r\n","/*\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { AuthenticationException } from \"./AuthenticationException\";\r\n\r\nexport class UnparsableSignatureException extends AuthenticationException {\r\n    public constructor(message: string, cause: any) {\r\n        super(message, cause);\r\n    }\r\n}\r\n","import { Algorithm } from \"./Algorithm\";\r\nimport { AuthenticationException } from \"./AuthenticationException\";\r\nimport { Join } from \"./Join\";\r\nimport { MissingAlgorithmException } from \"./MissingAlgorithmException\";\r\nimport { MissingKeyIdException } from \"./MissingKeyIdException\";\r\nimport { MissingSignatureException } from \"./MissingSignatureException\";\r\nimport { UnparsableSignatureException } from \"./UnparsableSignatureException\";\r\n\r\ninterface Matcher {\r\n    group: string[];\r\n}\r\n\r\nexport class Signature {\r\n    /**\r\n     * REQUIRED.  The `keyId` field is an opaque string that the server can\r\n     * use to look up the component they need to validate the signature.  It\r\n     * could be an SSH key fingerprint, a URL to machine-readable key data,\r\n     * an LDAP DN, etc.  Management of keys and assignment of `keyId` is out\r\n     * of scope for this document.\r\n     */\r\n    private keyId: string;\r\n\r\n    /**\r\n     * REQUIRED.  The `algorithm` parameter is used to specify the digital\r\n     * signature algorithm to use when generating the signature.  Valid\r\n     * values for this parameter can be found in the Signature Algorithms\r\n     * registry located at http://www.iana.org/assignments/signature-\r\n     * algorithms and MUST NOT be marked \"deprecated\".\r\n     */\r\n    private algorithm: Algorithm;\r\n\r\n    /**\r\n     * OPTIONAL.  The `headers` parameter is used to specify the list of\r\n     * HTTP headers included when generating the signature for the message.\r\n     * If specified, it should be a lowercased, quoted list of HTTP header\r\n     * fields, separated by a single space character.  If not specified,\r\n     * implementations MUST operate as if the field were specified with a\r\n     * single value, the `Date` header, in the list of HTTP headers.  Note\r\n     * that the list order is important, and MUST be specified in the order\r\n     * the HTTP header field-value pairs are concatenated together during\r\n     * signing.\r\n     */\r\n    private signature: string;\r\n\r\n    /**\r\n     * REQUIRED.  The `signature` parameter is a base 64 encoded digital\r\n     * signature, as described in RFC 4648 [RFC4648], Section 4 [4].  The\r\n     * client uses the `algorithm` and `headers` signature parameters to\r\n     * form a canonicalized `signing string`.  This `signing string` is then\r\n     * signed with the key associated with `keyId` and the algorithm\r\n     * corresponding to `algorithm`.  The `signature` parameter is then set\r\n     * to the base 64 encoding of the signature.\r\n     */\r\n    private headers: Array<string> = [\"date\"];\r\n    private static RFC_2617_PARAM = /(\\\\w+)=\\\"([^\\\"]*)\\\"\"/;\r\n\r\n    public constructor(keyId?: any, algorithm?: any, signature?: any, ...headers: any[]) {\r\n        if (keyId == null || /* isEmpty */(keyId.trim().length === 0)) {\r\n            throw new Error(\"keyId is required.\");\r\n        }\r\n        if (algorithm == null) {\r\n            throw new Error(\"algorithm is required.\");\r\n        }\r\n        this.keyId = keyId;\r\n        this.algorithm = typeof algorithm === 'string' ? Signature.getAlgorithm(algorithm) : algorithm;\r\n        this.signature = signature;\r\n\r\n        if (headers.length !== 0) {\r\n            if(headers[0] instanceof Array) {\r\n                this.headers =this.lowercase(headers[0])\r\n            } else {\r\n                this.headers = this.lowercase(headers);\r\n            }\r\n        }\r\n\r\n        this.headers = this.headers.slice(0); // unmodifiableList\r\n    }\r\n\r\n    private static getAlgorithm(algorithm: string): Algorithm {\r\n        if (algorithm == null) throw new Error(\"Algorithm cannot be null\");\r\n        return Algorithm.get(algorithm);\r\n    }\r\n\r\n    private lowercase(headers: Array<string>): Array<string> {\r\n        const list: Array<string> = <any>([]);\r\n        for (let header in headers) {\r\n            list.push(header.toLowerCase());\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public getKeyId(): string {\r\n        return this.keyId;\r\n    }\r\n\r\n    public getAlgorithm(): Algorithm {\r\n        return this.algorithm;\r\n    }\r\n\r\n    public getSignature(): string {\r\n        return this.signature;\r\n    }\r\n\r\n    public getHeaders(): Array<string> {\r\n        return this.headers;\r\n    }\r\n\r\n    public static fromString(authorization: string): Signature | undefined {\r\n        try {\r\n            authorization = Signature.normalize(authorization);\r\n            let map: any = <any>({});\r\n\r\n            let matcher: Matcher = { group: [] };\r\n            while ((matcher.group = this.RFC_2617_PARAM.exec(authorization) as Array<string>) !== null) {\r\n                const key: string = matcher.group[1].toLowerCase();\r\n                const value: string = matcher.group[2];\r\n                map.put(key, value);\r\n            }\r\n            let headers: Array<string> = <any>([]);\r\n            let headerString: string = /* get */((m, k) => m[k] === undefined ? null : m[k])(map, \"headers\");\r\n            if (headerString != null) {\r\n                /* addAll */\r\n                ((l1, l2) => l1.push.apply(l1, l2))(headers, /* asList */headerString.toLowerCase().split(\" +\").slice(0));\r\n            }\r\n            let keyid: string = /* get */((m, k) => m[k] === undefined ? null : m[k])(map, \"keyid\");\r\n            if (keyid == null) throw new MissingKeyIdException();\r\n            let algorithm: string = /* get */((m, k) => m[k] === undefined ? null : m[k])(map, \"algorithm\");\r\n            if (algorithm == null) throw new MissingAlgorithmException();\r\n            let signature: string = /* get */((m, k) => m[k] === undefined ? null : m[k])(map, \"signature\");\r\n            if (signature == null) throw new MissingSignatureException();\r\n            let parsedAlgorithm: Algorithm = Algorithm.get(algorithm);\r\n            return new Signature(keyid, parsedAlgorithm, signature, headers);\r\n        } catch (__e) {\r\n            if (__e != null && __e instanceof <any>AuthenticationException) {\r\n                let e: AuthenticationException = <AuthenticationException>__e;\r\n                throw e;\r\n            } else if (__e != null && __e instanceof <any>Error) {\r\n                let e: Error = <Error>__e;\r\n                throw new UnparsableSignatureException(authorization, e);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*private*/\r\n    static normalize(authorization: string): string {\r\n        let start: string = \"signature \";\r\n        let prefix: string = authorization.substring(0, start.length).toLowerCase();\r\n        if (/* equals */(<any>((o1: any, o2: any) => {\r\n            if (o1 && o1.equals) {\r\n                return o1.equals(o2);\r\n            } else {\r\n                return o1 === o2;\r\n            }\r\n        })(prefix, start))) {\r\n            authorization = authorization.substring(start.length);\r\n        }\r\n        return authorization.trim();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @return {string}\r\n     */\r\n    public toString(): string {\r\n        return \"Signature \" + \"keyId=\\\"\" + this.keyId + '\\\"' +\r\n            \",algorithm=\\\"\" + this.algorithm + '\\\"' +\r\n            \",headers=\\\"\" + Join.join(\" \", this.headers) + '\\\"' +\r\n            \",signature=\\\"\" + this.signature + '\\\"';\r\n    }\r\n}\r\n","import { Join } from \"./Join\";\r\nimport { MissingRequiredHeaderException } from \"./MissingRequiredHeaderException\";\r\n\r\nexport interface StringMap {\r\n    [key: string]: string;\r\n}\r\n\r\nexport class Signatures {\r\n    public static createSigningString(required: Array<string>, method: string, uri: string, headers: StringMap): string {\r\n        headers = Signatures.lowercase(headers) as StringMap;\r\n        let list: string[] = [];\r\n        for (let key of required) {\r\n            if (\"(request-target)\" === key) {\r\n                method = Signatures.lowercase(method) as string;\r\n                list.push(Join.join(\" \", \"(request-target):\", method, uri));\r\n            } else {\r\n                let value: string = headers[key];\r\n                if (value == null) throw new MissingRequiredHeaderException(key);\r\n                list.push(key + \": \" + value);\r\n            }\r\n        }\r\n        return Join.join(\"\\n\", list);\r\n    }\r\n\r\n    private static lowercase$(headers: StringMap): StringMap {\r\n        return Object.keys(headers).reduce(function (newObj, key) {\r\n            const val = headers[key];\r\n            newObj[key.toLowerCase()] = (typeof val === 'object') ? Signatures.lowercase$(val) : val;\r\n            return newObj;\r\n        }, {});\r\n    }\r\n\r\n    private static lowercase(headers: (string | StringMap)): (string | StringMap) {\r\n        if (typeof headers === 'string') {\r\n            return headers.toLowerCase() as string;\r\n        } else {\r\n            return Signatures.lowercase$(headers) as StringMap;\r\n        }\r\n    }\r\n}\r\n","export * from \"./Algorithm\";\r\nexport * from \"./AuthenticationException\";\r\nexport * from \"./Base64\";\r\nexport * from \"./Collection\";\r\nexport * from \"./EC\";\r\nexport * from \"./Join\";\r\nexport * from \"./MissingAlgorithmException\";\r\nexport * from \"./MissingKeyIdException\";\r\nexport * from \"./MissingRequiredHeaderException\";\r\nexport * from \"./MissingSignatureException\";\r\nexport * from \"./PEM\";\r\nexport * from \"./RSA\";\r\nexport * from \"./RuntimeException\";\r\nexport * from \"./System\";\r\nexport * from \"./Signature\";\r\nexport * from \"./Signatures\";\r\n//export * from \"./Signer\";\r\nexport * from \"./UnparsableSignatureException\";\r\nexport * from \"./UnsupportedAlgorithmException\";\r\n//export * from \"./Verifier\";\r\n"],"names":["tslib_1.__extends","webCrypto","webCryptoSubtle","RSA","EC"],"mappings":"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"}